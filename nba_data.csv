{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "63c51bcf",
   "metadata": {
    "papermill": {
     "duration": 0.016095,
     "end_time": "2024-03-17T07:26:16.113060",
     "exception": false,
     "start_time": "2024-03-17T07:26:16.096965",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## NBA Scoring and 3-Pointers Correlation Analysis\n",
    "\n",
    "### Problem Description\n",
    "\n",
    "I recently heard that NBA games are scoring record-breaking number of points, so it's pretty normal to end the game at 120:123 or have 70:75 at half-time, which used to be the score of a full game.\n",
    "\n",
    "But is that scoring growth really true and linear over the years? \n",
    "Let's analyze the historical data.\n",
    "\n",
    "Also, it seems that basketball became a game of 3-point shooters and everyone wants to be Stephen Curry. Could that be the cause of such scoring? Let's analyze if the amount of 3-pointers attempted/made is increasing over the years.\n",
    "\n",
    "Imagine we are basketball journalists and need to find some insights for the upcoming article or video.\n",
    "\n",
    "### Dataset \n",
    "\n",
    "I worked with the `game.csv` file from [NBA Database Dataset](https://www.kaggle.com/datasets/wyattowalsh/basketball/data): data for games from 1946-47 to 2022-23 seasons."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4e352ac",
   "metadata": {
    "papermill": {
     "duration": 0.014583,
     "end_time": "2024-03-17T07:26:16.143156",
     "exception": false,
     "start_time": "2024-03-17T07:26:16.128573",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## 1. Reading Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2866f57c",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:16.175747Z",
     "iopub.status.busy": "2024-03-17T07:26:16.174677Z",
     "iopub.status.idle": "2024-03-17T07:26:18.292243Z",
     "shell.execute_reply": "2024-03-17T07:26:18.290886Z"
    },
    "papermill": {
     "duration": 2.137365,
     "end_time": "2024-03-17T07:26:18.295156",
     "exception": false,
     "start_time": "2024-03-17T07:26:16.157791",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(65698, 55)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# I want to see ALL columns in the notebook to pick the ones I need\n",
    "pd.set_option('display.max_columns', None)\n",
    "\n",
    "# I know that we will group data by game date, so I parse it to datetime right away\n",
    "df = pd.read_csv('/kaggle/input/basketball/csv/game.csv', parse_dates=['game_date'])\n",
    "\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7f1e5c77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:18.328813Z",
     "iopub.status.busy": "2024-03-17T07:26:18.328406Z",
     "iopub.status.idle": "2024-03-17T07:26:18.391717Z",
     "shell.execute_reply": "2024-03-17T07:26:18.390371Z"
    },
    "papermill": {
     "duration": 0.084081,
     "end_time": "2024-03-17T07:26:18.394600",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.310519",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>season_id</th>\n",
       "      <th>team_id_home</th>\n",
       "      <th>team_abbreviation_home</th>\n",
       "      <th>team_name_home</th>\n",
       "      <th>game_id</th>\n",
       "      <th>game_date</th>\n",
       "      <th>matchup_home</th>\n",
       "      <th>wl_home</th>\n",
       "      <th>min</th>\n",
       "      <th>fgm_home</th>\n",
       "      <th>fga_home</th>\n",
       "      <th>fg_pct_home</th>\n",
       "      <th>fg3m_home</th>\n",
       "      <th>fg3a_home</th>\n",
       "      <th>fg3_pct_home</th>\n",
       "      <th>ftm_home</th>\n",
       "      <th>fta_home</th>\n",
       "      <th>ft_pct_home</th>\n",
       "      <th>oreb_home</th>\n",
       "      <th>dreb_home</th>\n",
       "      <th>reb_home</th>\n",
       "      <th>ast_home</th>\n",
       "      <th>stl_home</th>\n",
       "      <th>blk_home</th>\n",
       "      <th>tov_home</th>\n",
       "      <th>pf_home</th>\n",
       "      <th>pts_home</th>\n",
       "      <th>plus_minus_home</th>\n",
       "      <th>video_available_home</th>\n",
       "      <th>team_id_away</th>\n",
       "      <th>team_abbreviation_away</th>\n",
       "      <th>team_name_away</th>\n",
       "      <th>matchup_away</th>\n",
       "      <th>wl_away</th>\n",
       "      <th>fgm_away</th>\n",
       "      <th>fga_away</th>\n",
       "      <th>fg_pct_away</th>\n",
       "      <th>fg3m_away</th>\n",
       "      <th>fg3a_away</th>\n",
       "      <th>fg3_pct_away</th>\n",
       "      <th>ftm_away</th>\n",
       "      <th>fta_away</th>\n",
       "      <th>ft_pct_away</th>\n",
       "      <th>oreb_away</th>\n",
       "      <th>dreb_away</th>\n",
       "      <th>reb_away</th>\n",
       "      <th>ast_away</th>\n",
       "      <th>stl_away</th>\n",
       "      <th>blk_away</th>\n",
       "      <th>tov_away</th>\n",
       "      <th>pf_away</th>\n",
       "      <th>pts_away</th>\n",
       "      <th>plus_minus_away</th>\n",
       "      <th>video_available_away</th>\n",
       "      <th>season_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>21946</td>\n",
       "      <td>1610610035</td>\n",
       "      <td>HUS</td>\n",
       "      <td>Toronto Huskies</td>\n",
       "      <td>24600001</td>\n",
       "      <td>1946-11-01</td>\n",
       "      <td>HUS vs. NYK</td>\n",
       "      <td>L</td>\n",
       "      <td>0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.552</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>66.0</td>\n",
       "      <td>-2</td>\n",
       "      <td>0</td>\n",
       "      <td>1610612752</td>\n",
       "      <td>NYK</td>\n",
       "      <td>New York Knicks</td>\n",
       "      <td>NYK @ HUS</td>\n",
       "      <td>W</td>\n",
       "      <td>24.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0.769</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>68.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>Regular Season</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21946</td>\n",
       "      <td>1610610034</td>\n",
       "      <td>BOM</td>\n",
       "      <td>St. Louis Bombers</td>\n",
       "      <td>24600003</td>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>BOM vs. PIT</td>\n",
       "      <td>W</td>\n",
       "      <td>0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>0.339</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1610610031</td>\n",
       "      <td>PIT</td>\n",
       "      <td>Pittsburgh Ironmen</td>\n",
       "      <td>PIT @ BOM</td>\n",
       "      <td>L</td>\n",
       "      <td>16.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>0.222</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>-5</td>\n",
       "      <td>0</td>\n",
       "      <td>Regular Season</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21946</td>\n",
       "      <td>1610610032</td>\n",
       "      <td>PRO</td>\n",
       "      <td>Providence Steamrollers</td>\n",
       "      <td>24600002</td>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>PRO vs. BOS</td>\n",
       "      <td>W</td>\n",
       "      <td>0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59.0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>BOS @ PRO</td>\n",
       "      <td>L</td>\n",
       "      <td>21.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>53.0</td>\n",
       "      <td>-6</td>\n",
       "      <td>0</td>\n",
       "      <td>Regular Season</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21946</td>\n",
       "      <td>1610610025</td>\n",
       "      <td>CHS</td>\n",
       "      <td>Chicago Stags</td>\n",
       "      <td>24600004</td>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>CHS vs. NYK</td>\n",
       "      <td>W</td>\n",
       "      <td>0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>1610612752</td>\n",
       "      <td>NYK</td>\n",
       "      <td>New York Knicks</td>\n",
       "      <td>NYK @ CHS</td>\n",
       "      <td>L</td>\n",
       "      <td>16.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>-16</td>\n",
       "      <td>0</td>\n",
       "      <td>Regular Season</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>21946</td>\n",
       "      <td>1610610028</td>\n",
       "      <td>DEF</td>\n",
       "      <td>Detroit Falcons</td>\n",
       "      <td>24600005</td>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>DEF vs. WAS</td>\n",
       "      <td>L</td>\n",
       "      <td>0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>33.0</td>\n",
       "      <td>-17</td>\n",
       "      <td>0</td>\n",
       "      <td>1610610036</td>\n",
       "      <td>WAS</td>\n",
       "      <td>Washington Capitols</td>\n",
       "      <td>WAS @ DEF</td>\n",
       "      <td>W</td>\n",
       "      <td>18.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50.0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>Regular Season</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   season_id  team_id_home team_abbreviation_home           team_name_home  \\\n",
       "0      21946    1610610035                    HUS          Toronto Huskies   \n",
       "1      21946    1610610034                    BOM        St. Louis Bombers   \n",
       "2      21946    1610610032                    PRO  Providence Steamrollers   \n",
       "3      21946    1610610025                    CHS            Chicago Stags   \n",
       "4      21946    1610610028                    DEF          Detroit Falcons   \n",
       "\n",
       "    game_id  game_date matchup_home wl_home  min  fgm_home  fga_home  \\\n",
       "0  24600001 1946-11-01  HUS vs. NYK       L    0      25.0       NaN   \n",
       "1  24600003 1946-11-02  BOM vs. PIT       W    0      20.0      59.0   \n",
       "2  24600002 1946-11-02  PRO vs. BOS       W    0      21.0       NaN   \n",
       "3  24600004 1946-11-02  CHS vs. NYK       W    0      21.0       NaN   \n",
       "4  24600005 1946-11-02  DEF vs. WAS       L    0      10.0       NaN   \n",
       "\n",
       "   fg_pct_home  fg3m_home  fg3a_home  fg3_pct_home  ftm_home  fta_home  \\\n",
       "0          NaN        NaN        NaN           NaN      16.0      29.0   \n",
       "1        0.339        NaN        NaN           NaN      16.0       NaN   \n",
       "2          NaN        NaN        NaN           NaN      17.0       NaN   \n",
       "3          NaN        NaN        NaN           NaN      21.0       NaN   \n",
       "4          NaN        NaN        NaN           NaN      13.0       NaN   \n",
       "\n",
       "   ft_pct_home  oreb_home  dreb_home  reb_home  ast_home  stl_home  blk_home  \\\n",
       "0        0.552        NaN        NaN       NaN       NaN       NaN       NaN   \n",
       "1          NaN        NaN        NaN       NaN       NaN       NaN       NaN   \n",
       "2          NaN        NaN        NaN       NaN       NaN       NaN       NaN   \n",
       "3          NaN        NaN        NaN       NaN       NaN       NaN       NaN   \n",
       "4          NaN        NaN        NaN       NaN       NaN       NaN       NaN   \n",
       "\n",
       "   tov_home  pf_home  pts_home  plus_minus_home  video_available_home  \\\n",
       "0       NaN      NaN      66.0               -2                     0   \n",
       "1       NaN     21.0      56.0                5                     0   \n",
       "2       NaN      NaN      59.0                6                     0   \n",
       "3       NaN     20.0      63.0               16                     0   \n",
       "4       NaN      NaN      33.0              -17                     0   \n",
       "\n",
       "   team_id_away team_abbreviation_away       team_name_away matchup_away  \\\n",
       "0    1610612752                    NYK      New York Knicks    NYK @ HUS   \n",
       "1    1610610031                    PIT   Pittsburgh Ironmen    PIT @ BOM   \n",
       "2    1610612738                    BOS       Boston Celtics    BOS @ PRO   \n",
       "3    1610612752                    NYK      New York Knicks    NYK @ CHS   \n",
       "4    1610610036                    WAS  Washington Capitols    WAS @ DEF   \n",
       "\n",
       "  wl_away  fgm_away  fga_away  fg_pct_away  fg3m_away  fg3a_away  \\\n",
       "0       W      24.0       NaN          NaN        NaN        NaN   \n",
       "1       L      16.0      72.0        0.222        NaN        NaN   \n",
       "2       L      21.0       NaN          NaN        NaN        NaN   \n",
       "3       L      16.0       NaN          NaN        NaN        NaN   \n",
       "4       W      18.0       NaN          NaN        NaN        NaN   \n",
       "\n",
       "   fg3_pct_away  ftm_away  fta_away  ft_pct_away  oreb_away  dreb_away  \\\n",
       "0           NaN      20.0      26.0        0.769        NaN        NaN   \n",
       "1           NaN      19.0       NaN          NaN        NaN        NaN   \n",
       "2           NaN      11.0       NaN          NaN        NaN        NaN   \n",
       "3           NaN      15.0       NaN          NaN        NaN        NaN   \n",
       "4           NaN      14.0       NaN          NaN        NaN        NaN   \n",
       "\n",
       "   reb_away  ast_away  stl_away  blk_away  tov_away  pf_away  pts_away  \\\n",
       "0       NaN       NaN       NaN       NaN       NaN      NaN      68.0   \n",
       "1       NaN       NaN       NaN       NaN       NaN     25.0      51.0   \n",
       "2       NaN       NaN       NaN       NaN       NaN      NaN      53.0   \n",
       "3       NaN       NaN       NaN       NaN       NaN     22.0      47.0   \n",
       "4       NaN       NaN       NaN       NaN       NaN      NaN      50.0   \n",
       "\n",
       "   plus_minus_away  video_available_away     season_type  \n",
       "0                2                     0  Regular Season  \n",
       "1               -5                     0  Regular Season  \n",
       "2               -6                     0  Regular Season  \n",
       "3              -16                     0  Regular Season  \n",
       "4               17                     0  Regular Season  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f58c92c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:18.428344Z",
     "iopub.status.busy": "2024-03-17T07:26:18.427911Z",
     "iopub.status.idle": "2024-03-17T07:26:18.493158Z",
     "shell.execute_reply": "2024-03-17T07:26:18.491762Z"
    },
    "papermill": {
     "duration": 0.085404,
     "end_time": "2024-03-17T07:26:18.495888",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.410484",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>season_id</th>\n",
       "      <th>team_id_home</th>\n",
       "      <th>team_abbreviation_home</th>\n",
       "      <th>team_name_home</th>\n",
       "      <th>game_id</th>\n",
       "      <th>game_date</th>\n",
       "      <th>matchup_home</th>\n",
       "      <th>wl_home</th>\n",
       "      <th>min</th>\n",
       "      <th>fgm_home</th>\n",
       "      <th>fga_home</th>\n",
       "      <th>fg_pct_home</th>\n",
       "      <th>fg3m_home</th>\n",
       "      <th>fg3a_home</th>\n",
       "      <th>fg3_pct_home</th>\n",
       "      <th>ftm_home</th>\n",
       "      <th>fta_home</th>\n",
       "      <th>ft_pct_home</th>\n",
       "      <th>oreb_home</th>\n",
       "      <th>dreb_home</th>\n",
       "      <th>reb_home</th>\n",
       "      <th>ast_home</th>\n",
       "      <th>stl_home</th>\n",
       "      <th>blk_home</th>\n",
       "      <th>tov_home</th>\n",
       "      <th>pf_home</th>\n",
       "      <th>pts_home</th>\n",
       "      <th>plus_minus_home</th>\n",
       "      <th>video_available_home</th>\n",
       "      <th>team_id_away</th>\n",
       "      <th>team_abbreviation_away</th>\n",
       "      <th>team_name_away</th>\n",
       "      <th>matchup_away</th>\n",
       "      <th>wl_away</th>\n",
       "      <th>fgm_away</th>\n",
       "      <th>fga_away</th>\n",
       "      <th>fg_pct_away</th>\n",
       "      <th>fg3m_away</th>\n",
       "      <th>fg3a_away</th>\n",
       "      <th>fg3_pct_away</th>\n",
       "      <th>ftm_away</th>\n",
       "      <th>fta_away</th>\n",
       "      <th>ft_pct_away</th>\n",
       "      <th>oreb_away</th>\n",
       "      <th>dreb_away</th>\n",
       "      <th>reb_away</th>\n",
       "      <th>ast_away</th>\n",
       "      <th>stl_away</th>\n",
       "      <th>blk_away</th>\n",
       "      <th>tov_away</th>\n",
       "      <th>pf_away</th>\n",
       "      <th>pts_away</th>\n",
       "      <th>plus_minus_away</th>\n",
       "      <th>video_available_away</th>\n",
       "      <th>season_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>65693</th>\n",
       "      <td>42022</td>\n",
       "      <td>1610612748</td>\n",
       "      <td>MIA</td>\n",
       "      <td>Miami Heat</td>\n",
       "      <td>42200403</td>\n",
       "      <td>2023-06-07</td>\n",
       "      <td>MIA vs. DEN</td>\n",
       "      <td>L</td>\n",
       "      <td>240</td>\n",
       "      <td>34.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>0.370</td>\n",
       "      <td>11.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.314</td>\n",
       "      <td>15.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0.789</td>\n",
       "      <td>10.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>-15</td>\n",
       "      <td>1</td>\n",
       "      <td>1610612743</td>\n",
       "      <td>DEN</td>\n",
       "      <td>Denver Nuggets</td>\n",
       "      <td>DEN @ MIA</td>\n",
       "      <td>W</td>\n",
       "      <td>41.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.513</td>\n",
       "      <td>5.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.278</td>\n",
       "      <td>22.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0.815</td>\n",
       "      <td>13.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>109.0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>Playoffs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65694</th>\n",
       "      <td>42022</td>\n",
       "      <td>1610612748</td>\n",
       "      <td>MIA</td>\n",
       "      <td>Miami Heat</td>\n",
       "      <td>42200404</td>\n",
       "      <td>2023-06-09</td>\n",
       "      <td>MIA vs. DEN</td>\n",
       "      <td>L</td>\n",
       "      <td>240</td>\n",
       "      <td>35.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>0.449</td>\n",
       "      <td>8.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0.320</td>\n",
       "      <td>17.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.850</td>\n",
       "      <td>8.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>-13</td>\n",
       "      <td>1</td>\n",
       "      <td>1610612743</td>\n",
       "      <td>DEN</td>\n",
       "      <td>Denver Nuggets</td>\n",
       "      <td>DEN @ MIA</td>\n",
       "      <td>W</td>\n",
       "      <td>39.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>0.494</td>\n",
       "      <td>14.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.500</td>\n",
       "      <td>16.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.762</td>\n",
       "      <td>5.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>Playoffs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65695</th>\n",
       "      <td>42022</td>\n",
       "      <td>1610612743</td>\n",
       "      <td>DEN</td>\n",
       "      <td>Denver Nuggets</td>\n",
       "      <td>42200405</td>\n",
       "      <td>2023-06-12</td>\n",
       "      <td>DEN vs. MIA</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>38.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>0.452</td>\n",
       "      <td>5.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.179</td>\n",
       "      <td>13.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.565</td>\n",
       "      <td>11.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1610612748</td>\n",
       "      <td>MIA</td>\n",
       "      <td>Miami Heat</td>\n",
       "      <td>MIA @ DEN</td>\n",
       "      <td>L</td>\n",
       "      <td>33.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>0.344</td>\n",
       "      <td>9.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.257</td>\n",
       "      <td>14.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.875</td>\n",
       "      <td>11.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>-5</td>\n",
       "      <td>1</td>\n",
       "      <td>Playoffs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65696</th>\n",
       "      <td>32022</td>\n",
       "      <td>1610616834</td>\n",
       "      <td>LBN</td>\n",
       "      <td>Team LeBron</td>\n",
       "      <td>32200001</td>\n",
       "      <td>2023-02-19</td>\n",
       "      <td>LBN vs. GNS</td>\n",
       "      <td>L</td>\n",
       "      <td>221</td>\n",
       "      <td>79.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>0.598</td>\n",
       "      <td>17.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>0.283</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>-9</td>\n",
       "      <td>1</td>\n",
       "      <td>1610616833</td>\n",
       "      <td>GNS</td>\n",
       "      <td>Team Giannis</td>\n",
       "      <td>GNS @ LBN</td>\n",
       "      <td>W</td>\n",
       "      <td>76.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>0.618</td>\n",
       "      <td>29.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>0.439</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.750</td>\n",
       "      <td>10.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>184.0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>All-Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65697</th>\n",
       "      <td>32022</td>\n",
       "      <td>1610616834</td>\n",
       "      <td>LBN</td>\n",
       "      <td>Team LeBron</td>\n",
       "      <td>32200001</td>\n",
       "      <td>2023-02-19</td>\n",
       "      <td>LBN vs. GNS</td>\n",
       "      <td>L</td>\n",
       "      <td>221</td>\n",
       "      <td>79.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>0.598</td>\n",
       "      <td>17.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>0.283</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>175.0</td>\n",
       "      <td>-9</td>\n",
       "      <td>1</td>\n",
       "      <td>1610616833</td>\n",
       "      <td>GNS</td>\n",
       "      <td>Team Giannis</td>\n",
       "      <td>GNS @ LBN</td>\n",
       "      <td>W</td>\n",
       "      <td>76.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>0.618</td>\n",
       "      <td>29.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>0.439</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.750</td>\n",
       "      <td>10.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>184.0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>All Star</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       season_id  team_id_home team_abbreviation_home  team_name_home  \\\n",
       "65693      42022    1610612748                    MIA      Miami Heat   \n",
       "65694      42022    1610612748                    MIA      Miami Heat   \n",
       "65695      42022    1610612743                    DEN  Denver Nuggets   \n",
       "65696      32022    1610616834                    LBN     Team LeBron   \n",
       "65697      32022    1610616834                    LBN     Team LeBron   \n",
       "\n",
       "        game_id  game_date matchup_home wl_home  min  fgm_home  fga_home  \\\n",
       "65693  42200403 2023-06-07  MIA vs. DEN       L  240      34.0      92.0   \n",
       "65694  42200404 2023-06-09  MIA vs. DEN       L  240      35.0      78.0   \n",
       "65695  42200405 2023-06-12  DEN vs. MIA       W  240      38.0      84.0   \n",
       "65696  32200001 2023-02-19  LBN vs. GNS       L  221      79.0     132.0   \n",
       "65697  32200001 2023-02-19  LBN vs. GNS       L  221      79.0     132.0   \n",
       "\n",
       "       fg_pct_home  fg3m_home  fg3a_home  fg3_pct_home  ftm_home  fta_home  \\\n",
       "65693        0.370       11.0       35.0         0.314      15.0      19.0   \n",
       "65694        0.449        8.0       25.0         0.320      17.0      20.0   \n",
       "65695        0.452        5.0       28.0         0.179      13.0      23.0   \n",
       "65696        0.598       17.0       60.0         0.283       0.0       0.0   \n",
       "65697        0.598       17.0       60.0         0.283       0.0       0.0   \n",
       "\n",
       "       ft_pct_home  oreb_home  dreb_home  reb_home  ast_home  stl_home  \\\n",
       "65693        0.789       10.0       23.0      33.0      20.0       7.0   \n",
       "65694        0.850        8.0       29.0      37.0      23.0       2.0   \n",
       "65695        0.565       11.0       46.0      57.0      21.0       6.0   \n",
       "65696          NaN       13.0       32.0      45.0      49.0       7.0   \n",
       "65697          NaN       13.0       32.0      45.0      49.0       7.0   \n",
       "\n",
       "       blk_home  tov_home  pf_home  pts_home  plus_minus_home  \\\n",
       "65693       3.0       4.0     22.0      94.0              -15   \n",
       "65694       3.0      15.0     19.0      95.0              -13   \n",
       "65695       7.0      15.0     13.0      94.0                5   \n",
       "65696       2.0      10.0      5.0     175.0               -9   \n",
       "65697       2.0      10.0      5.0     175.0               -9   \n",
       "\n",
       "       video_available_home  team_id_away team_abbreviation_away  \\\n",
       "65693                     1    1610612743                    DEN   \n",
       "65694                     1    1610612743                    DEN   \n",
       "65695                     1    1610612748                    MIA   \n",
       "65696                     1    1610616833                    GNS   \n",
       "65697                     1    1610616833                    GNS   \n",
       "\n",
       "       team_name_away matchup_away wl_away  fgm_away  fga_away  fg_pct_away  \\\n",
       "65693  Denver Nuggets    DEN @ MIA       W      41.0      80.0        0.513   \n",
       "65694  Denver Nuggets    DEN @ MIA       W      39.0      79.0        0.494   \n",
       "65695      Miami Heat    MIA @ DEN       L      33.0      96.0        0.344   \n",
       "65696    Team Giannis    GNS @ LBN       W      76.0     123.0        0.618   \n",
       "65697    Team Giannis    GNS @ LBN       W      76.0     123.0        0.618   \n",
       "\n",
       "       fg3m_away  fg3a_away  fg3_pct_away  ftm_away  fta_away  ft_pct_away  \\\n",
       "65693        5.0       18.0         0.278      22.0      27.0        0.815   \n",
       "65694       14.0       28.0         0.500      16.0      21.0        0.762   \n",
       "65695        9.0       35.0         0.257      14.0      16.0        0.875   \n",
       "65696       29.0       66.0         0.439       3.0       4.0        0.750   \n",
       "65697       29.0       66.0         0.439       3.0       4.0        0.750   \n",
       "\n",
       "       oreb_away  dreb_away  reb_away  ast_away  stl_away  blk_away  tov_away  \\\n",
       "65693       13.0       45.0      58.0      28.0       3.0       5.0      14.0   \n",
       "65694        5.0       29.0      34.0      26.0      11.0       7.0       8.0   \n",
       "65695       11.0       33.0      44.0      18.0       9.0       7.0       8.0   \n",
       "65696       10.0       36.0      46.0      43.0       8.0       1.0      12.0   \n",
       "65697       10.0       36.0      46.0      43.0       8.0       1.0      12.0   \n",
       "\n",
       "       pf_away  pts_away  plus_minus_away  video_available_away season_type  \n",
       "65693     18.0     109.0               15                     1    Playoffs  \n",
       "65694     18.0     108.0               13                     1    Playoffs  \n",
       "65695     21.0      89.0               -5                     1    Playoffs  \n",
       "65696      2.0     184.0                9                     1    All-Star  \n",
       "65697      2.0     184.0                9                     1    All Star  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "99bda93c",
   "metadata": {
    "papermill": {
     "duration": 0.016336,
     "end_time": "2024-03-17T07:26:18.528463",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.512127",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## 2. Taking Only \"Official\" Games\n",
    "\n",
    "I've noticed that `season_type` column has the value of \"Regular Season\". So, what are the other values?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "82687539",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:18.563889Z",
     "iopub.status.busy": "2024-03-17T07:26:18.563439Z",
     "iopub.status.idle": "2024-03-17T07:26:18.591183Z",
     "shell.execute_reply": "2024-03-17T07:26:18.589740Z"
    },
    "papermill": {
     "duration": 0.048645,
     "end_time": "2024-03-17T07:26:18.593832",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.545187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "season_type\n",
       "Regular Season    60192\n",
       "Playoffs           3842\n",
       "Pre Season         1536\n",
       "All Star             65\n",
       "All-Star             63\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['season_type'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f57f1dc5",
   "metadata": {
    "papermill": {
     "duration": 0.016525,
     "end_time": "2024-03-17T07:26:18.627009",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.610484",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Ok, so we need only the \"official\" games, filtering out the pre-season and all-star games."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f9cee592",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:18.661735Z",
     "iopub.status.busy": "2024-03-17T07:26:18.661349Z",
     "iopub.status.idle": "2024-03-17T07:26:18.694299Z",
     "shell.execute_reply": "2024-03-17T07:26:18.692877Z"
    },
    "papermill": {
     "duration": 0.053623,
     "end_time": "2024-03-17T07:26:18.697138",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.643515",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(64034, 55)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games = df[df['season_type'].isin(['Regular Season', 'Playoffs'])]\n",
    "df_games.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9be6a3f",
   "metadata": {
    "papermill": {
     "duration": 0.016164,
     "end_time": "2024-03-17T07:26:18.730948",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.714784",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Ok, we have filtered out 1,600+ rows. Good."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c98c952a",
   "metadata": {
    "papermill": {
     "duration": 0.016828,
     "end_time": "2024-03-17T07:26:18.764275",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.747447",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## 3. Columns: Only Ones We Need\n",
    "\n",
    "We don't care about specific teams. We just care about the date, points scored and 3-pointers made/attempted."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2adafc5d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:18.799591Z",
     "iopub.status.busy": "2024-03-17T07:26:18.799154Z",
     "iopub.status.idle": "2024-03-17T07:26:18.820390Z",
     "shell.execute_reply": "2024-03-17T07:26:18.819344Z"
    },
    "papermill": {
     "duration": 0.042583,
     "end_time": "2024-03-17T07:26:18.823445",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.780862",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_date</th>\n",
       "      <th>pts_home</th>\n",
       "      <th>pts_away</th>\n",
       "      <th>fg3m_home</th>\n",
       "      <th>fg3a_home</th>\n",
       "      <th>fg3m_away</th>\n",
       "      <th>fg3a_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1946-11-01</td>\n",
       "      <td>66.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>56.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>59.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>63.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1946-11-02</td>\n",
       "      <td>33.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   game_date  pts_home  pts_away  fg3m_home  fg3a_home  fg3m_away  fg3a_away\n",
       "0 1946-11-01      66.0      68.0        NaN        NaN        NaN        NaN\n",
       "1 1946-11-02      56.0      51.0        NaN        NaN        NaN        NaN\n",
       "2 1946-11-02      59.0      53.0        NaN        NaN        NaN        NaN\n",
       "3 1946-11-02      63.0      47.0        NaN        NaN        NaN        NaN\n",
       "4 1946-11-02      33.0      50.0        NaN        NaN        NaN        NaN"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games = df_games.loc[:, ['game_date', 'pts_home', 'pts_away', 'fg3m_home', 'fg3a_home', 'fg3m_away', 'fg3a_away']]\n",
    "df_games.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d169376",
   "metadata": {
    "papermill": {
     "duration": 0.016478,
     "end_time": "2024-03-17T07:26:18.857127",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.840649",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Hmmm, `NaN` values? So 3-pointers were not existing/counted in 1946? Will explore that a bit later."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63344e8c",
   "metadata": {
    "papermill": {
     "duration": 0.01777,
     "end_time": "2024-03-17T07:26:18.891710",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.873940",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## 4. Columns: Game Year instead of Game Date\n",
    "\n",
    "Next, we need to group the data by season. But this dataset doesn't have the season name, unfortunately. \n",
    "\n",
    "So we will group by **year**, instead. That wouldn't affect the data trends much. \n",
    "\n",
    "For that, we create a specific year column, and drop the date column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5ffa06d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:18.927622Z",
     "iopub.status.busy": "2024-03-17T07:26:18.927235Z",
     "iopub.status.idle": "2024-03-17T07:26:18.950803Z",
     "shell.execute_reply": "2024-03-17T07:26:18.949412Z"
    },
    "papermill": {
     "duration": 0.044811,
     "end_time": "2024-03-17T07:26:18.953674",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.908863",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>pts_home</th>\n",
       "      <th>pts_away</th>\n",
       "      <th>fg3m_home</th>\n",
       "      <th>fg3a_home</th>\n",
       "      <th>fg3m_away</th>\n",
       "      <th>fg3a_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1946</td>\n",
       "      <td>66.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1946</td>\n",
       "      <td>56.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1946</td>\n",
       "      <td>59.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1946</td>\n",
       "      <td>63.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1946</td>\n",
       "      <td>33.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   game_year  pts_home  pts_away  fg3m_home  fg3a_home  fg3m_away  fg3a_away\n",
       "0       1946      66.0      68.0        NaN        NaN        NaN        NaN\n",
       "1       1946      56.0      51.0        NaN        NaN        NaN        NaN\n",
       "2       1946      59.0      53.0        NaN        NaN        NaN        NaN\n",
       "3       1946      63.0      47.0        NaN        NaN        NaN        NaN\n",
       "4       1946      33.0      50.0        NaN        NaN        NaN        NaN"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games.insert(0, 'game_year', df_games['game_date'].dt.year)\n",
    "df_games = df_games.drop('game_date', axis=1)\n",
    "df_games.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4299c0ca",
   "metadata": {
    "papermill": {
     "duration": 0.017157,
     "end_time": "2024-03-17T07:26:18.988375",
     "exception": false,
     "start_time": "2024-03-17T07:26:18.971218",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## 5. Columns: Total Numbers, not Home/Away Teams\n",
    "\n",
    "We also are interested in the **total score** per game, not individual team scores."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1db5970c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:19.028600Z",
     "iopub.status.busy": "2024-03-17T07:26:19.028191Z",
     "iopub.status.idle": "2024-03-17T07:26:19.046959Z",
     "shell.execute_reply": "2024-03-17T07:26:19.045677Z"
    },
    "papermill": {
     "duration": 0.041076,
     "end_time": "2024-03-17T07:26:19.049745",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.008669",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>total_score</th>\n",
       "      <th>fg3m_home</th>\n",
       "      <th>fg3a_home</th>\n",
       "      <th>fg3m_away</th>\n",
       "      <th>fg3a_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1946</td>\n",
       "      <td>134.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1946</td>\n",
       "      <td>107.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1946</td>\n",
       "      <td>112.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1946</td>\n",
       "      <td>110.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1946</td>\n",
       "      <td>83.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   game_year  total_score  fg3m_home  fg3a_home  fg3m_away  fg3a_away\n",
       "0       1946        134.0        NaN        NaN        NaN        NaN\n",
       "1       1946        107.0        NaN        NaN        NaN        NaN\n",
       "2       1946        112.0        NaN        NaN        NaN        NaN\n",
       "3       1946        110.0        NaN        NaN        NaN        NaN\n",
       "4       1946         83.0        NaN        NaN        NaN        NaN"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games.insert(3, 'total_score', df_games['pts_home'] + df_games['pts_away'])\n",
    "df_games = df_games.drop(['pts_home', 'pts_away'], axis=1)\n",
    "df_games.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7042e468",
   "metadata": {
    "papermill": {
     "duration": 0.017848,
     "end_time": "2024-03-17T07:26:19.085242",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.067394",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Similarly, we are interested in **total** numbers of 3-pointers made/attempted, not by home/away team."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "26fe7c89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:19.123136Z",
     "iopub.status.busy": "2024-03-17T07:26:19.122654Z",
     "iopub.status.idle": "2024-03-17T07:26:19.147461Z",
     "shell.execute_reply": "2024-03-17T07:26:19.146184Z"
    },
    "papermill": {
     "duration": 0.047633,
     "end_time": "2024-03-17T07:26:19.150692",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.103059",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>total_score</th>\n",
       "      <th>fg3_made</th>\n",
       "      <th>fg3_attempts</th>\n",
       "      <th>fg3_pct</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1946</td>\n",
       "      <td>134.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1946</td>\n",
       "      <td>107.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1946</td>\n",
       "      <td>112.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1946</td>\n",
       "      <td>110.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1946</td>\n",
       "      <td>83.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   game_year  total_score  fg3_made  fg3_attempts  fg3_pct\n",
       "0       1946        134.0       NaN           NaN      NaN\n",
       "1       1946        107.0       NaN           NaN      NaN\n",
       "2       1946        112.0       NaN           NaN      NaN\n",
       "3       1946        110.0       NaN           NaN      NaN\n",
       "4       1946         83.0       NaN           NaN      NaN"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games['fg3_made'] = df_games['fg3m_home'] + df_games['fg3m_away']\n",
    "df_games['fg3_attempts'] = df_games['fg3a_home'] + df_games['fg3a_away']\n",
    "df_games['fg3_pct'] = df_games['fg3_made'] / df_games['fg3_attempts']\n",
    "df_games = df_games.drop(['fg3m_home', 'fg3m_away', 'fg3a_home', 'fg3a_away'], axis=1)\n",
    "df_games.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0690e9de",
   "metadata": {
    "papermill": {
     "duration": 0.017779,
     "end_time": "2024-03-17T07:26:19.187159",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.169380",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Hmm, no data for 1946? Let's sort by percentage descending to see if there's any data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7db16911",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:19.225828Z",
     "iopub.status.busy": "2024-03-17T07:26:19.225040Z",
     "iopub.status.idle": "2024-03-17T07:26:19.253244Z",
     "shell.execute_reply": "2024-03-17T07:26:19.251544Z"
    },
    "papermill": {
     "duration": 0.05054,
     "end_time": "2024-03-17T07:26:19.255894",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.205354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>total_score</th>\n",
       "      <th>fg3_made</th>\n",
       "      <th>fg3_attempts</th>\n",
       "      <th>fg3_pct</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18710</th>\n",
       "      <td>1985</td>\n",
       "      <td>231.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18486</th>\n",
       "      <td>1984</td>\n",
       "      <td>205.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17966</th>\n",
       "      <td>1984</td>\n",
       "      <td>233.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15776</th>\n",
       "      <td>1982</td>\n",
       "      <td>211.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19696</th>\n",
       "      <td>1986</td>\n",
       "      <td>235.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20260</th>\n",
       "      <td>1986</td>\n",
       "      <td>222.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20475</th>\n",
       "      <td>1986</td>\n",
       "      <td>222.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20556</th>\n",
       "      <td>1987</td>\n",
       "      <td>194.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21927</th>\n",
       "      <td>1988</td>\n",
       "      <td>209.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24960</th>\n",
       "      <td>1991</td>\n",
       "      <td>216.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>64034 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       game_year  total_score  fg3_made  fg3_attempts  fg3_pct\n",
       "18710       1985        231.0       2.0           0.0      inf\n",
       "18486       1984        205.0       2.0           2.0      1.0\n",
       "17966       1984        233.0       1.0           1.0      1.0\n",
       "15776       1982        211.0       3.0           3.0      1.0\n",
       "19696       1986        235.0       2.0           2.0      1.0\n",
       "...          ...          ...       ...           ...      ...\n",
       "20260       1986        222.0       0.0           0.0      NaN\n",
       "20475       1986        222.0       0.0           0.0      NaN\n",
       "20556       1987        194.0       0.0           0.0      NaN\n",
       "21927       1988        209.0       0.0           0.0      NaN\n",
       "24960       1991        216.0       0.0           0.0      NaN\n",
       "\n",
       "[64034 rows x 5 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games.sort_values('fg3_pct', ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "694d8cd0",
   "metadata": {
    "papermill": {
     "duration": 0.019286,
     "end_time": "2024-03-17T07:26:19.294134",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.274848",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Good news: we have data.\n",
    "\n",
    "Bad news: `inf`? We accidentally found invalid data!\n",
    "\n",
    "---\n",
    "\n",
    "## 6. Dropping Invalid Data\n",
    "\n",
    "Not sure why, but one game has more three-pointers made than attempted. Maybe there are more of such games?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4c2e509b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:19.406505Z",
     "iopub.status.busy": "2024-03-17T07:26:19.406122Z",
     "iopub.status.idle": "2024-03-17T07:26:19.425145Z",
     "shell.execute_reply": "2024-03-17T07:26:19.423655Z"
    },
    "papermill": {
     "duration": 0.042031,
     "end_time": "2024-03-17T07:26:19.428371",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.386340",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>total_score</th>\n",
       "      <th>fg3_made</th>\n",
       "      <th>fg3_attempts</th>\n",
       "      <th>fg3_pct</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18710</th>\n",
       "      <td>1985</td>\n",
       "      <td>231.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       game_year  total_score  fg3_made  fg3_attempts  fg3_pct\n",
       "18710       1985        231.0       2.0           0.0      inf"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games.query('fg3_attempts < fg3_made')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f6f400f",
   "metadata": {
    "papermill": {
     "duration": 0.018161,
     "end_time": "2024-03-17T07:26:19.465932",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.447771",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Oh, it was just that one, cool, let's drop this row."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fdad3aea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:19.509650Z",
     "iopub.status.busy": "2024-03-17T07:26:19.508772Z",
     "iopub.status.idle": "2024-03-17T07:26:19.545838Z",
     "shell.execute_reply": "2024-03-17T07:26:19.544689Z"
    },
    "papermill": {
     "duration": 0.061673,
     "end_time": "2024-03-17T07:26:19.548408",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.486735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>total_score</th>\n",
       "      <th>fg3_made</th>\n",
       "      <th>fg3_attempts</th>\n",
       "      <th>fg3_pct</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20030</th>\n",
       "      <td>1986</td>\n",
       "      <td>239.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18486</th>\n",
       "      <td>1984</td>\n",
       "      <td>205.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22351</th>\n",
       "      <td>1988</td>\n",
       "      <td>216.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23835</th>\n",
       "      <td>1990</td>\n",
       "      <td>192.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20032</th>\n",
       "      <td>1986</td>\n",
       "      <td>225.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20260</th>\n",
       "      <td>1986</td>\n",
       "      <td>222.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20475</th>\n",
       "      <td>1986</td>\n",
       "      <td>222.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20556</th>\n",
       "      <td>1987</td>\n",
       "      <td>194.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21927</th>\n",
       "      <td>1988</td>\n",
       "      <td>209.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24960</th>\n",
       "      <td>1991</td>\n",
       "      <td>216.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>64033 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       game_year  total_score  fg3_made  fg3_attempts  fg3_pct\n",
       "20030       1986        239.0       2.0           2.0      1.0\n",
       "18486       1984        205.0       2.0           2.0      1.0\n",
       "22351       1988        216.0       2.0           2.0      1.0\n",
       "23835       1990        192.0       3.0           3.0      1.0\n",
       "20032       1986        225.0       1.0           1.0      1.0\n",
       "...          ...          ...       ...           ...      ...\n",
       "20260       1986        222.0       0.0           0.0      NaN\n",
       "20475       1986        222.0       0.0           0.0      NaN\n",
       "20556       1987        194.0       0.0           0.0      NaN\n",
       "21927       1988        209.0       0.0           0.0      NaN\n",
       "24960       1991        216.0       0.0           0.0      NaN\n",
       "\n",
       "[64033 rows x 5 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_games = df_games.drop(df_games.query('fg3_attempts < fg3_made').index)\n",
    "df_games.sort_values('fg3_pct', ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9718d218",
   "metadata": {
    "papermill": {
     "duration": 0.019133,
     "end_time": "2024-03-17T07:26:19.587352",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.568219",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Ok, good, we have the most important numbers and we are ready to draw plots and gather insights."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4904b231",
   "metadata": {
    "papermill": {
     "duration": 0.0186,
     "end_time": "2024-03-17T07:26:19.626307",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.607707",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## 7. Score By Year: Plot and Insights"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "642f18de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:19.665827Z",
     "iopub.status.busy": "2024-03-17T07:26:19.665197Z",
     "iopub.status.idle": "2024-03-17T07:26:19.682253Z",
     "shell.execute_reply": "2024-03-17T07:26:19.680501Z"
    },
    "papermill": {
     "duration": 0.040231,
     "end_time": "2024-03-17T07:26:19.685171",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.644940",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "game_year\n",
       "1946    129.507812\n",
       "1947    140.691525\n",
       "1948    151.726644\n",
       "1949    160.364211\n",
       "1950    161.536346\n",
       "           ...    \n",
       "2019    222.167324\n",
       "2020    225.256374\n",
       "2021    221.364308\n",
       "2022    225.166168\n",
       "2023    229.712240\n",
       "Name: total_score, Length: 77, dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_years = df_games.groupby('game_year')['total_score'].mean()\n",
    "df_years"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "53e667b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:19.728429Z",
     "iopub.status.busy": "2024-03-17T07:26:19.727634Z",
     "iopub.status.idle": "2024-03-17T07:26:20.136619Z",
     "shell.execute_reply": "2024-03-17T07:26:20.134834Z"
    },
    "papermill": {
     "duration": 0.433775,
     "end_time": "2024-03-17T07:26:20.139911",
     "exception": false,
     "start_time": "2024-03-17T07:26:19.706136",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'NBA: Average Total Points per Game'}, xlabel='game_year'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_years.plot(title='NBA: Average Total Points per Game')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f79e100e",
   "metadata": {
    "papermill": {
     "duration": 0.019916,
     "end_time": "2024-03-17T07:26:20.181069",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.161153",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Insights\n",
    "\n",
    "1. Indeed, scoring is on a steep rise from 2010s to 2020s.\n",
    "2. Unexpected: scoring was also this high in the 1960-1990s."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed51b725",
   "metadata": {
    "papermill": {
     "duration": 0.020318,
     "end_time": "2024-03-17T07:26:20.222154",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.201836",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Hmmm, what happened in the 1960s? Did the teams actually score that much? Let's pick a random year and check:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "04757cc1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:20.264472Z",
     "iopub.status.busy": "2024-03-17T07:26:20.264013Z",
     "iopub.status.idle": "2024-03-17T07:26:20.282611Z",
     "shell.execute_reply": "2024-03-17T07:26:20.281030Z"
    },
    "papermill": {
     "duration": 0.043219,
     "end_time": "2024-03-17T07:26:20.285599",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.242380",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>total_score</th>\n",
       "      <th>fg3_made</th>\n",
       "      <th>fg3_attempts</th>\n",
       "      <th>fg3_pct</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5038</th>\n",
       "      <td>1963</td>\n",
       "      <td>218.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5039</th>\n",
       "      <td>1963</td>\n",
       "      <td>256.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5040</th>\n",
       "      <td>1963</td>\n",
       "      <td>215.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5041</th>\n",
       "      <td>1963</td>\n",
       "      <td>255.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5042</th>\n",
       "      <td>1963</td>\n",
       "      <td>238.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      game_year  total_score  fg3_made  fg3_attempts  fg3_pct\n",
       "5038       1963        218.0       NaN           NaN      NaN\n",
       "5039       1963        256.0       NaN           NaN      NaN\n",
       "5040       1963        215.0       NaN           NaN      NaN\n",
       "5041       1963        255.0       NaN           NaN      NaN\n",
       "5042       1963        238.0       NaN           NaN      NaN"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_60s = df_games[df_games['game_year'] == 1963]\n",
    "df_60s.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0809115",
   "metadata": {
    "papermill": {
     "duration": 0.020343,
     "end_time": "2024-03-17T07:26:20.327307",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.306964",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Indeed, 200+ points per game. \n",
    "\n",
    "Reasons? You need to dive deeper into how the game was played at that time. It was much faster, with shorter possessions, see [this Reddit thread](https://www.reddit.com/r/nbadiscussion/comments/grl8v9/why_was_the_game_played_so_much_faster_in_the_60s/)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba6d5fa1",
   "metadata": {
    "papermill": {
     "duration": 0.020235,
     "end_time": "2024-03-17T07:26:20.368088",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.347853",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## 8. Three-Pointers Per Year: Plot and Insights\n",
    "\n",
    "First, we create a separate dataframe, dropping the empty values from 1946 and other older years."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "effeed22",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:20.412537Z",
     "iopub.status.busy": "2024-03-17T07:26:20.412093Z",
     "iopub.status.idle": "2024-03-17T07:26:20.433731Z",
     "shell.execute_reply": "2024-03-17T07:26:20.432446Z"
    },
    "papermill": {
     "duration": 0.047209,
     "end_time": "2024-03-17T07:26:20.436842",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.389633",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_year</th>\n",
       "      <th>total_score</th>\n",
       "      <th>fg3_made</th>\n",
       "      <th>fg3_attempts</th>\n",
       "      <th>fg3_pct</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14165</th>\n",
       "      <td>1980</td>\n",
       "      <td>211.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14166</th>\n",
       "      <td>1980</td>\n",
       "      <td>211.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14167</th>\n",
       "      <td>1980</td>\n",
       "      <td>212.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14169</th>\n",
       "      <td>1980</td>\n",
       "      <td>211.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14170</th>\n",
       "      <td>1980</td>\n",
       "      <td>230.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       game_year  total_score  fg3_made  fg3_attempts  fg3_pct\n",
       "14165       1980        211.0       0.0           2.0      0.0\n",
       "14166       1980        211.0       0.0           2.0      0.0\n",
       "14167       1980        212.0       1.0           5.0      0.2\n",
       "14169       1980        211.0       0.0           3.0      0.0\n",
       "14170       1980        230.0       0.0           8.0      0.0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_3pts = df_games.dropna(subset = ['fg3_made', 'fg3_attempts', 'fg3_pct'])\n",
    "df_3pts.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79ff8e90",
   "metadata": {
    "papermill": {
     "duration": 0.020566,
     "end_time": "2024-03-17T07:26:20.478598",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.458032",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Interestingly, now we have only the game year from 1980 onward!\n",
    "\n",
    "Now, let's see how many three-pointers on average were made per game, grouped by year."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c88f16ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:20.522239Z",
     "iopub.status.busy": "2024-03-17T07:26:20.521796Z",
     "iopub.status.idle": "2024-03-17T07:26:20.532873Z",
     "shell.execute_reply": "2024-03-17T07:26:20.531959Z"
    },
    "papermill": {
     "duration": 0.035706,
     "end_time": "2024-03-17T07:26:20.535291",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.499585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "game_year\n",
       "1980    0.200000\n",
       "1981    0.833333\n",
       "1982    1.268116\n",
       "1983    1.121212\n",
       "1984    1.147368\n",
       "Name: fg3_made, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_3made = df_3pts.groupby('game_year')['fg3_made'].mean()\n",
    "df_3made.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e5b67b12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:20.579805Z",
     "iopub.status.busy": "2024-03-17T07:26:20.578936Z",
     "iopub.status.idle": "2024-03-17T07:26:20.935122Z",
     "shell.execute_reply": "2024-03-17T07:26:20.933961Z"
    },
    "papermill": {
     "duration": 0.381948,
     "end_time": "2024-03-17T07:26:20.938407",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.556459",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'NBA: Total 3-Point Shots Made Per Game'}, xlabel='game_year'>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAh8AAAHHCAYAAAAf2DoOAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABd7klEQVR4nO3dd3wT9f8H8FeStulMB1100tJSWkbZyCpFkDJE2YLKVkRBRVT84gJcuBA3SwVEEEUBZcseUnYpywItlJZOoDTpTNPm8/ujND9CC3SkSZu+no9HHpq7y937cgl59T53n49ECCFAREREZCRSUxdAREREDQvDBxERERkVwwcREREZFcMHERERGRXDBxERERkVwwcREREZFcMHERERGRXDBxERERkVwwcREREZFcMHUQX27t0LiUSCvXv3mrqUKqmrdUskEkybNs3UZdRJy5cvh0QiQWJioqlLITIahg8zVfYPmrW1NVJSUsrNj4yMRMuWLfWmNWnSBBKJRPewtrZGcHAwXn/9dWRlZd1zWzNnzoREIsETTzxRo5rv3Pb9HpX5Yf3oo4+wYcOGGtVTGefOncOIESMQGBgIW1tbuLq6IiIiAhs3bqz0Ou5+393d3dGjRw+sX7++FisvLzU1FXPmzMGpU6cq/ZozZ85g+PDh8Pf3h7W1Nby9vfHII4/gm2++qb1CAZw/fx5z5swx6A92ZGQkJBIJgoODK5y/Y8cO3TH6448/DLZdQysLoGUPS0tLBAYGYuzYsbh8+bLR6rhy5QqmTZuGZs2awdbWFra2tggLC8PUqVNx+vRpo9VBdZOFqQug2qVWq/Hxxx9X+segTZs2ePXVVwEAhYWFOHHiBL788kvs27cPR48eLbe8EAK//vormjRpgo0bNyInJwcODg7VqnXlypV6z3/++Wfs2LGj3PTQ0NAHruujjz7C8OHDMXjw4GrVUllXr15FTk4Oxo0bBy8vL+Tn5+PPP//EY489hsWLF2Py5MmVWs+d73tqaioWL16MoUOHYuHChZgyZUql64mIiEBBQQGsrKyqvC+pqamYO3cumjRpgjZt2jxw+UOHDqFXr17w8/PDs88+C09PTyQnJ+Pw4cP46quv8OKLL1a5hso6f/485s6di8jISDRp0sRg67W2tkZ8fDyOHj2KTp066c1btWoVrK2tUVhYaLDt1aaXXnoJHTt2hEajwcmTJ7FkyRJs3rwZZ86cgZeXV61ue9OmTXjiiSdgYWGBp556CuHh4ZBKpYiLi8O6deuwcOFCXLlyBf7+/rVaB9VhgszSsmXLBADRpk0bIZfLRUpKit78nj17ihYtWuhN8/f3FwMHDiy3rtdee00AEBcvXiw3b/fu3QKA2L17t7C0tBTLly832D5MnTpVVPcjamdnJ8aNG1ftbe/Zs0cAEHv27Knya4uLi0V4eLgICQmp1PIVve9paWnCzs5ONGvWrMrbr65jx44JAGLZsmWVWn7AgAHCzc1N3Lp1q9y8jIwMvecAxNSpUw1QZam1a9dW+/jcS9l3IiQkREyfPl1vXkFBgVAoFGLYsGECgFi7dq3Btlv2Xb1y5YpB1lf22b27xq+//loAEB999FGNt5Gbm3vPefHx8cLOzk6EhoaK1NTUcvM1Go346quvRFJSUo3roPqLzS5m7s0330RJSQk+/vjjaq/D09MTAGBhUf5E2apVqxAWFoZevXqhT58+WLVqVYXriIuLQ1JSUrVrKJOXl4dXX30Vvr6+kMvlCAkJweeffw5xx+DMEokEeXl5WLFihe7U8/jx4wGUnql44YUXEBISAhsbGzRq1AgjRoww6Ol7mUwGX19fZGdnV3sdnp6eCA0NxZUrV3TTYmJi0L9/fygUCtjb26N37944fPiw3usquuajrInt/Pnz6NWrF2xtbeHt7Y1PP/1U73UdO3YEAEyYMEH3vi1fvvyeNSYkJKBFixZwcnIqN8/d3b3C12zYsAEtW7aEXC5HixYtsG3btnLLPGg/ly9fjhEjRgAAevXqVa457vjx44iKioKrqytsbGwQEBCAiRMn3nM/7jZ69Gj89ttv0Gq1umkbN25Efn4+Ro4cWW75qnymzp07h4cffhg2Njbw8fHBBx98oLedO23duhU9evSAnZ0dHBwcMHDgQJw7d67S+3G3hx9+GAD0PlOV2cb48eNhb2+PhIQEDBgwAA4ODnjqqafuuZ1PP/0UeXl5WLZsGRo3blxuvoWFBV566SX4+vrqpp0+fRrjx49HYGAgrK2t4enpiYkTJ+LmzZt6r50zZw4kEgkuXryIp59+Go6OjnBzc8M777wDIQSSk5Px+OOPQ6FQwNPTE/Pnzy+3fbVajdmzZyMoKAhyuRy+vr6YOXMm1Gp15d5IMgg2u5i5gIAAjB07FkuXLsX//ve/B55u1Wg0uHHjBoDSZpeYmBh88cUXiIiIQEBAgN6yarUaf/75p665YPTo0ZgwYQLS09N1gaVMaGgoevbsWaMLIYUQeOyxx7Bnzx5MmjQJbdq0wfbt2/H6668jJSUFCxYsAFDafPPMM8+gU6dOumaPpk2bAgCOHTuGQ4cOYdSoUfDx8UFiYiIWLlyIyMhInD9/Hra2ttWqLS8vDwUFBVAqlfj777+xdevWGl0Do9FokJycjEaNGgEo/dHq0aMHFAoFZs6cCUtLSyxevBiRkZHYt28fOnfufN/13bp1C/369cPQoUMxcuRI/PHHH3jjjTfQqlUr9O/fH6GhoXjvvffw7rvvYvLkyejRowcAoGvXrvdcp7+/P6Kjo3H27Nly1w9V5ODBg1i3bh1eeOEFODg44Ouvv8awYcOQlJRUpf2MiIjASy+9hK+//hpvvvmmrhkuNDQUmZmZ6Nu3L9zc3PC///0PTk5OSExMxLp16yr1vgPAk08+iTlz5mDv3r26H+zVq1ejd+/eFYaqyn6m0tPT0atXLxQXF+N///sf7OzssGTJEtjY2JRb58qVKzFu3DhERUXhk08+QX5+PhYuXIju3bsjJiamWk1NCQkJAKB7r6uyjeLiYkRFRaF79+74/PPP7/s92bRpE4KCgh74mbzTjh07cPnyZUyYMAGenp44d+4clixZgnPnzuHw4cOQSCR6yz/xxBMIDQ3Fxx9/jM2bN+ODDz6Ai4sLFi9ejIcffhiffPIJVq1ahddeew0dO3ZEREQEAECr1eKxxx7DwYMHMXnyZISGhuLMmTNYsGABLl68aJTrxOg2E595oVpSdir32LFjIiEhQVhYWIiXXnpJN/9ezS4Ayj26desmbty4UW4bf/zxhwAgLl26JIQQQqVSCWtra7FgwYJyywIQPXv2rNI+3N3ssmHDBgFAfPDBB3rLDR8+XEgkEhEfH6+bdq9ml/z8/HLToqOjBQDx888/66ZVtdnlueee071fUqlUDB8+XGRlZVXqtf7+/qJv377i+vXr4vr16yI2NlaMGjVKABAvvviiEEKIwYMHCysrK5GQkKB7XWpqqnBwcBARERH3rbtnz57l9k+tVgtPT08xbNgw3bSqNrv8888/QiaTCZlMJrp06SJmzpwptm/fLoqKisotC0BYWVnpHaPY2FgBQHzzzTe6aZXdz3s1u6xfv173ua+qO78THTp0EJMmTRJCCHHr1i1hZWUlVqxYUWGTRmU/U9OnTxcAxJEjR3TTMjMzhaOjo16zS05OjnBychLPPvus3jrT09OFo6Njuel3K6vxp59+EtevXxepqali8+bNokmTJkIikYhjx45VaRvjxo0TAMT//ve/+25XCCGUSqUAIAYPHlxu3q1bt3Sf8evXr+u9bxW9h7/++qsAIPbv36+bNnv2bAFATJ48WTetuLhY+Pj4CIlEIj7++GO97dnY2Oj9O7By5UohlUrFgQMH9La1aNEiAUD8+++/D9xHMgw2uzQAgYGBGDNmDJYsWYK0tLT7Ltu5c2fs2LEDO3bswKZNm/Dhhx/i3LlzeOyxx1BQUKC37KpVq9ChQwcEBQUBgO60bUVNL0KIGt/+uWXLFshkMrz00kt601999VUIIbB169YHruPOvzI1Gg1u3ryJoKAgODk54eTJk9Wubfr06dixYwdWrFiB/v37o6SkBEVFRZV+/T///AM3Nze4ubkhPDwca9euxZgxY/DJJ5+gpKQE//zzDwYPHozAwEDdaxo3bownn3wSBw8ehEqluu/67e3t8fTTT+ueW1lZoVOnTjW6++GRRx5BdHQ0HnvsMcTGxuLTTz9FVFQUvL298ffff5dbvk+fProzUADQunVrKBQKXQ2G2M+yJqBNmzZBo9FUe9+efPJJrFu3DkVFRfjjjz8gk8kwZMiQCpet7Gdqy5YteOihh/QuZHVzcyvXhLFjxw5kZ2dj9OjRuHHjhu4hk8nQuXNn7Nmzp1L7MHHiRLi5ucHLywsDBw7UNUV26NChWtt4/vnnH7jNsuNjb29fbl5kZKTuM+7m5obvvvtON+/O97CwsBA3btzAQw89BAAVfi+feeYZ3f/LZDJ06NABQghMmjRJN93JyQkhISF6n/G1a9ciNDQUzZs319vvsjNclX1vqebY7NJAvP3221i5ciU+/vhjfPXVV/dcztXVFX369NE9HzhwIEJCQjB8+HD88MMPujsYsrOzsWXLFkybNg3x8fG65bt164Y///wTFy9eRLNmzQy6D1evXoWXl1e5u2nKTrtfvXr1gesoKCjAvHnzsGzZMqSkpOhdK6JUKqtdW/PmzdG8eXMAwNixY9G3b18MGjQIR44cgUQigVKp1AtvVlZWcHFx0T3v3LkzPvjgA0gkEtja2iI0NFT3Q5qeno78/HyEhISU225oaCi0Wi2Sk5PRokWLe9bn4+NT7tS1s7NzjW957Nixo+5HOjY2FuvXr8eCBQswfPhwnDp1CmFhYbpl/fz8yr3e2dkZt27dAgBcv369xvvZs2dPDBs2DHPnzsWCBQsQGRmJwYMH48knn4RcLq/0fo0aNQqvvfYatm7dilWrVuHRRx+9511clf1MXb16tcKmiLv399KlSwD+/xqNuykUikrtw7vvvosePXpAJpPB1dUVoaGhuuu2qroNCwsL+Pj4PHCbZe9Rbm5uuXmLFy9GTk4OMjIy9IIwAGRlZWHu3LlYs2YNMjMz9eZV9L28+7Pk6OgIa2truLq6lpt+53Ujly5dwn///Qc3N7cK679721R7GD4aiMDAQDz99NNYsmQJ/ve//1Xptb179wYA7N+/Xxc+1q5dC7Vajfnz51d4UdeqVaswd+7cmhduYC+++CKWLVuG6dOno0uXLnB0dIREIsGoUaPueeFfdQwfPhzPPfccLl68iJCQELz88stYsWKFbv7d17/cHfoMTSaTVTj9zh/KmrCyskLHjh3RsWNHNGvWDBMmTMDatWsxe/Zso9UAQNcHx+HDh7Fx40Zs374dEydOxPz583H48OEK/yKvSOPGjREZGYn58+fj33//xZ9//nnPZQ39mSp7zcqVK8tdOwVUfOF3RVq1anXPz1RVtyGXyyGVPvhEuaOjIxo3boyzZ8+Wm1cWvCq6EHfkyJE4dOgQXn/9dbRp0wb29vbQarXo169fhe9hRZ+lyny+tFotWrVqhS+++KLCZe+8CJZqF8NHA/L222/jl19+wSeffFKl1xUXFwPQ/2tm1apVaNmypd6PS5nFixdj9erVBg8f/v7+2LlzZ7m+ROLi4nTzy9z9V36ZP/74A+PGjdMLTIWFhTW6M6UiZWc5yv5qmzlzpt5fe87OzpVel5ubG2xtbXHhwoVy8+Li4iCVSg3yj+a93rOq6tChAwA8sInvblXZzwfV+tBDD+Ghhx7Chx9+iNWrV+Opp57CmjVr9E7XP8iTTz6JZ555Bk5OThgwYMA9l6vsZ8rf3193xuFOd+9vWdOUu7t7rQXS2tzGwIED8cMPP1TYV0pFbt26hV27dmHu3Ll49913ddMreq9qqmnTpoiNjUXv3r0N9nmn6uE1Hw1I06ZN8fTTT2Px4sVIT0+v9OvKeusMDw8HACQnJ2P//v0YOXIkhg8fXu4xYcIExMfH48iRI7p1GOJW2wEDBqCkpATffvut3vQFCxZAIpGgf//+uml2dnYVBgqZTFbuL+1vvvkGJSUl1aqpotO0Go0GP//8M2xsbHTNDmFhYejTp4/u0b59+0pvQyaToW/fvvjrr7/0/mrMyMjA6tWr0b1790qfir8fOzs7AKh0ENuzZ0+FZy22bNkCoHxzwoNUZT/vVeutW7fK1VTWYVpVb6UcPnw4Zs+eje+///6+nbZV9jM1YMAAHD58WK+zvuvXr5e7RioqKgoKhQIfffRRhdetXL9+vUr7UZHa3MbMmTNha2uLiRMnIiMjo9z8u9+rsjMWd0//8ssvq13DvYwcORIpKSlYunRpuXkFBQXIy8sz+DapYjzz0cC89dZbWLlyJS5cuFBh23lKSgp++eUXANC14y9evBiurq66JpfVq1frbnutyIABA2BhYYFVq1bpTrUa4lbbQYMGoVevXnjrrbeQmJiI8PBw/PPPP/jrr78wffp0vYsZ27dvj507d+KLL76Al5cXAgIC0LlzZzz66KNYuXIlHB0dERYWhujoaOzcuVN3+2FVPffcc1CpVIiIiIC3tzfS09OxatUqxMXFYf78+ZU+zf8gH3zwAXbs2IHu3bvjhRdegIWFBRYvXgy1Wq3XX0dNNG3aFE5OTli0aBEcHBxgZ2eHzp07l7vFusyLL76I/Px8DBkyBM2bN0dRUREOHTqE3377DU2aNMGECROqXENl97NNmzaQyWT45JNPoFQqIZfL8fDDD2P16tX4/vvvMWTIEDRt2hQ5OTlYunQpFArFfc9eVMTR0RFz5sx54HKV/UzNnDkTK1euRL9+/fDyyy/rbrX19/fXu/ZGoVBg4cKFGDNmDNq1a4dRo0bBzc0NSUlJ2Lx5M7p161YugFdVbW4jODgYq1evxujRoxESEqLr4VQIgStXrmD16tWQSqW6a0gUCgUiIiLw6aefQqPRwNvbG//8849efySGMmbMGPz++++YMmUK9uzZg27duqGkpARxcXH4/fffsX37dt2ZO6plxr/Bhozhzltt71Z269yDbrWVSqXC3d1djB49Wu8WyVatWgk/P7/7bj8yMlK4u7sLjUYjhDDMrbZClN6G+MorrwgvLy9haWkpgoODxWeffSa0Wq3ecnFxcSIiIkLY2NgIALrb7W7duiUmTJggXF1dhb29vYiKihJxcXHC399f75a8yt5q++uvv4o+ffoIDw8PYWFhIZydnUWfPn3EX3/9Ven9vFfPsnc7efKkiIqKEvb29sLW1lb06tVLHDp0SG+Ze91qe/exFqL0c+Dv76837a+//hJhYWHCwsLigbfdbt26VUycOFE0b95c2NvbCysrKxEUFCRefPHFSvdwevf7Xtn9FEKIpUuXisDAQCGTyXT7fPLkSTF69Gjh5+cn5HK5cHd3F48++qg4fvz4PfejzL3epztVdKttZT9TQghx+vRp0bNnT2FtbS28vb3F+++/L3788ccKezjds2ePiIqKEo6OjsLa2lo0bdpUjB8//oH7cq8eTu+17IO2MW7cOGFnZ/fAdd0tPj5ePP/88yIoKEhYW1sLGxsb0bx5czFlyhRx6tQpvWWvXbsmhgwZIpycnISjo6MYMWKESE1NFQDE7NmzdcuV3Wp7/fp1vdffq8aKjmlRUZH45JNPRIsWLYRcLhfOzs6iffv2Yu7cuUKpVFZ5P6l6JEIY8GovIiIiogfgNR9ERERkVAwfREREZFQMH0RERGRUDB9ERERkVAwfREREZFQMH0RERGRUda6TMa1Wi9TUVDg4OLD7WyIionpCCIGcnBx4eXk9cCygOhc+UlNTObgPERFRPZWcnPzAUZDrXPgoGzAsOTnZIONVEBERUe1TqVTw9fXVG/jzXupc+ChralEoFAwfRERE9UxlLpngBadERERkVAwfREREZFQMH0RERGRUDB9ERERkVAwfREREZFQMH0RERGRUDB9ERERkVAwfREREZFQMH0RERGRUDB9ERERkVAwfREREZFQMH0RERGRUVQof8+bNQ8eOHeHg4AB3d3cMHjwYFy5c0FsmMjISEolE7zFlyhSDFk1ERGTuhBDIzi9CiVaYuhSDq9Kotvv27cPUqVPRsWNHFBcX480330Tfvn1x/vx52NnZ6ZZ79tln8d577+me29raGq5iIiIiMyGEQFZeERJv5iPxRh4Sb+bhyu3/Xr2Rjxx1MTwV1nimRwBGd/KDnbzODUZfLVXai23btuk9X758Odzd3XHixAlEREToptva2sLT09MwFRIREZmRM9eU+OHgZVy5URo0cgqL77t8uqoQH2z+D9/sjse4rk0wvmsTuNhZGana2lGjCKVUKgEALi4uetNXrVqFX375BZ6enhg0aBDeeeede579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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_3made.plot(title='NBA: Total 3-Point Shots Made Per Game')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6799fc7d",
   "metadata": {
    "papermill": {
     "duration": 0.026945,
     "end_time": "2024-03-17T07:26:20.994084",
     "exception": false,
     "start_time": "2024-03-17T07:26:20.967139",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "BINGO! A clear trend of growth!\n",
    "\n",
    "Now, what about the **attempts** of three-pointers?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "df1544ea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:21.043154Z",
     "iopub.status.busy": "2024-03-17T07:26:21.042694Z",
     "iopub.status.idle": "2024-03-17T07:26:21.053666Z",
     "shell.execute_reply": "2024-03-17T07:26:21.052486Z"
    },
    "papermill": {
     "duration": 0.038238,
     "end_time": "2024-03-17T07:26:21.056411",
     "exception": false,
     "start_time": "2024-03-17T07:26:21.018173",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "game_year\n",
       "1980    4.000000\n",
       "1981    3.708333\n",
       "1982    4.884058\n",
       "1983    4.494949\n",
       "1984    4.736842\n",
       "Name: fg3_attempts, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_3attempts = df_3pts.groupby('game_year')['fg3_attempts'].mean()\n",
    "df_3attempts.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c9b06c66",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:21.104141Z",
     "iopub.status.busy": "2024-03-17T07:26:21.103572Z",
     "iopub.status.idle": "2024-03-17T07:26:21.441044Z",
     "shell.execute_reply": "2024-03-17T07:26:21.440154Z"
    },
    "papermill": {
     "duration": 0.365094,
     "end_time": "2024-03-17T07:26:21.443649",
     "exception": false,
     "start_time": "2024-03-17T07:26:21.078555",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'NBA: Total 3-Point Shots Attempted Per Game'}, xlabel='game_year'>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_3attempts.plot(title='NBA: Total 3-Point Shots Attempted Per Game')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a05ae073",
   "metadata": {
    "papermill": {
     "duration": 0.02543,
     "end_time": "2024-03-17T07:26:21.492245",
     "exception": false,
     "start_time": "2024-03-17T07:26:21.466815",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Similar upward trend!\n",
    "\n",
    "So, the main insight is probably not about the 3-pointers **made** but about the short **attempted**!\n",
    "\n",
    "What if we put them both on one chart?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e545918d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:21.540023Z",
     "iopub.status.busy": "2024-03-17T07:26:21.539322Z",
     "iopub.status.idle": "2024-03-17T07:26:21.551257Z",
     "shell.execute_reply": "2024-03-17T07:26:21.550310Z"
    },
    "papermill": {
     "duration": 0.03928,
     "end_time": "2024-03-17T07:26:21.554052",
     "exception": false,
     "start_time": "2024-03-17T07:26:21.514772",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Shots Made</th>\n",
       "      <th>Shots Attempted</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>game_year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1980</th>\n",
       "      <td>0.200000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981</th>\n",
       "      <td>0.833333</td>\n",
       "      <td>3.708333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1982</th>\n",
       "      <td>1.268116</td>\n",
       "      <td>4.884058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1983</th>\n",
       "      <td>1.121212</td>\n",
       "      <td>4.494949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1984</th>\n",
       "      <td>1.147368</td>\n",
       "      <td>4.736842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1985</th>\n",
       "      <td>1.860465</td>\n",
       "      <td>6.769556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1986</th>\n",
       "      <td>2.179197</td>\n",
       "      <td>7.553038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987</th>\n",
       "      <td>3.011224</td>\n",
       "      <td>9.814286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1988</th>\n",
       "      <td>3.387582</td>\n",
       "      <td>10.646284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1989</th>\n",
       "      <td>4.488849</td>\n",
       "      <td>13.920607</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Shots Made  Shots Attempted\n",
       "game_year                             \n",
       "1980         0.200000         4.000000\n",
       "1981         0.833333         3.708333\n",
       "1982         1.268116         4.884058\n",
       "1983         1.121212         4.494949\n",
       "1984         1.147368         4.736842\n",
       "1985         1.860465         6.769556\n",
       "1986         2.179197         7.553038\n",
       "1987         3.011224         9.814286\n",
       "1988         3.387582        10.646284\n",
       "1989         4.488849        13.920607"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_3made_attempts = pd.DataFrame({\n",
    "    'Shots Made': df_3made,\n",
    "    'Shots Attempted': df_3attempts\n",
    "})\n",
    "df_3made_attempts.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ec84e254",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:21.602290Z",
     "iopub.status.busy": "2024-03-17T07:26:21.601875Z",
     "iopub.status.idle": "2024-03-17T07:26:21.979764Z",
     "shell.execute_reply": "2024-03-17T07:26:21.978103Z"
    },
    "papermill": {
     "duration": 0.405856,
     "end_time": "2024-03-17T07:26:21.983191",
     "exception": false,
     "start_time": "2024-03-17T07:26:21.577335",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'NBA: Average 3-Point Shots Per Game'}, xlabel='game_year'>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_3made_attempts.plot(title='NBA: Average 3-Point Shots Per Game')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f95d96e8",
   "metadata": {
    "papermill": {
     "duration": 0.02441,
     "end_time": "2024-03-17T07:26:22.033191",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.008781",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The lines are not in exact visual trend now, but it's just because of different scale of the Y-axis.\n",
    "\n",
    "So, now I suspect that the **percentage** of shots made stayed unchanged for quite a while?.."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "13af632f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:22.085438Z",
     "iopub.status.busy": "2024-03-17T07:26:22.084858Z",
     "iopub.status.idle": "2024-03-17T07:26:22.097379Z",
     "shell.execute_reply": "2024-03-17T07:26:22.096081Z"
    },
    "papermill": {
     "duration": 0.042087,
     "end_time": "2024-03-17T07:26:22.099952",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.057865",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "game_year\n",
       "1980    0.040000\n",
       "1981    0.222884\n",
       "1982    0.234610\n",
       "1983    0.232600\n",
       "1984    0.214816\n",
       "Name: fg3_pct, dtype: float64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_3pct = df_3pts.groupby('game_year')['fg3_pct'].mean()\n",
    "df_3pct.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "6b57b716",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:22.152804Z",
     "iopub.status.busy": "2024-03-17T07:26:22.151187Z",
     "iopub.status.idle": "2024-03-17T07:26:22.453761Z",
     "shell.execute_reply": "2024-03-17T07:26:22.452349Z"
    },
    "papermill": {
     "duration": 0.331839,
     "end_time": "2024-03-17T07:26:22.456634",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.124795",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'NBA: 3-Point Shots Hit Percentage Per Game'}, xlabel='game_year'>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_3pct.plot(title='NBA: 3-Point Shots Hit Percentage Per Game')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21482598",
   "metadata": {
    "papermill": {
     "duration": 0.025564,
     "end_time": "2024-03-17T07:26:22.507455",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.481891",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Another BINGO! Since ~1995, the percentage peaked and stayed at around 35%, unchanged for a few decades.\n",
    "\n",
    "So, the rise in scoring is caused by the growth of 3-points **attempted**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfaae370",
   "metadata": {
    "papermill": {
     "duration": 0.025042,
     "end_time": "2024-03-17T07:26:22.558064",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.533022",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "## Main Findings"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2ba61f1",
   "metadata": {
    "papermill": {
     "duration": 0.024371,
     "end_time": "2024-03-17T07:26:22.607208",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.582837",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Finding 1. From 2000s, the average total score per game is steadily increasing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "6ed6aa21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:22.659361Z",
     "iopub.status.busy": "2024-03-17T07:26:22.658577Z",
     "iopub.status.idle": "2024-03-17T07:26:22.936630Z",
     "shell.execute_reply": "2024-03-17T07:26:22.935146Z"
    },
    "papermill": {
     "duration": 0.30719,
     "end_time": "2024-03-17T07:26:22.939518",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.632328",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'NBA: Average Total Points per Game'}, xlabel='game_year'>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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pMmTJyssLEyFCxfWzJkzNXfu3HzvY3Z2tiTpmWeeUbdu3fLs88ADD+R7vQXl4MGDat68uapUqaJx48YpIiJCRYoU0eLFizV+/HhH/fmVE35vlUKFCuU53xhzQ8uPHTtW3bt319dff63vv/9e//jHPzR8+HBt2rRJpUuX/sv1FcRYzEuVKlUkSbt27dKjjz7qmF+iRAnH8/3DDz84LZPf1/hqz+31nvOc9fTv319xcXF59uXrA+4sBBTcEgMHDtTHH3+skSNH5mu5zMxMSc6f0OLj41WtWjXHp6A/mzZtmubOnXtTASU+Pl7BwcGaNGlSrrYFCxboyy+/1NSpU1W0aFE1atRIYWFh+vTTT9WwYUOtXLlSb7/9ttMy9913n3bu3KnmzZvneXfDjfjiiy/k4+OjpUuXytvb2zF/5syZTv3Kli2r7OxsHT58WJUqVXLMP3DggFO/oKAg+fr6Kisrq8D/YJctW1aStHfv3lxte/bsUcmSJR2f9K/2fCxcuFDp6en65ptvnD45X3kKoiAFBQWpWLFiV63b09Mz1x/wm3G9MRAdHa3o6GgNHDhQGzZsUIMGDTR16lS9995711wuMTFRaWlpTkdRco4ilitXTlLBjMW8PPzww/L399e8efM0YMAAeXpe/yD87XqNc07XFS5c+JaGU9w+nOLBLXHffffpmWee0bRp05SUlHTDyy1cuFCSHEcmjh07prVr16pjx4564oknck09evTQgQMHtHnzZsc6buQ244sXL2rBggV65JFH8lxv3759df78ecftiZ6ennriiSe0cOFCzZkzR5mZmbm+zbZjx446fvy4/vWvf+W5vRs53VGoUCF5eHg4rn+R/nvY/quvvnLql/MJcfLkyU7zr/ySvEKFCqlDhw764osvtGvXrlzbO3Xq1HVrupqwsDA9+OCD+uijj5y+IXbXrl36/vvv1bp1a8e8nD+mV36TbM6n4j8feUhJSckVyApSoUKF1KJFC3399deOUyKSlJycrLlz56phw4by8/P7y9u52j6npqY6gniO6OhoeXp65roFOC+ZmZmaNm2a43FGRoamTZumoKAg1axZU1LBjMW8FCtWTK+//rp27dqlN998M88jRlfOu12vcXBwsJo0aaJp06blef3bXxnrcA2OoOCWefvttzVnzhzt3btXVatWzdV+/Phxffzxx5L++ya7c+dOTZs2TSVLlnSc3pk7d66MMWrXrl2e22jdurW8vLwUHx/vuGguMjJSjRs3vuaFst98843Onz9/1fXWq1dPQUFBio+PdwSRp556ShMnTtSgQYMUHR2tyMhIp2W6du2qzz77TC+++KJWrVqlBg0aKCsrS3v27NFnn32mpUuXqlatWtd8ztq0aaNx48apZcuWevrpp3Xy5ElNmjRJFStW1E8//eToV7NmTXXo0EETJkzQmTNnVK9ePa1Zs8bxSfrPn5pHjBihVatWqW7dunr++ecVFRWls2fPatu2bVq+fPk1f1rgekaPHq1WrVopJiZGPXv21MWLFzVx4kT5+/s7fRdLzh/Ot99+W506dVLhwoXVtm1btWjRQkWKFFHbtm31wgsv6MKFC/rXv/6l4ODg615k/Ve89957WrZsmRo2bKjevXvLy8tL06ZNU3p6utP3mfwV9913nwICAjR16lT5+vqqePHiqlu3rnbu3Km+ffvqySefVOXKlZWZmak5c+Y4wuT1hIeHa+TIkTpy5IgqV66sTz/9VDt27ND06dNVuHBhSQUzFq/mzTff1K+//qrRo0fr+++/V4cOHVS6dGn9/vvv2rZtm+bPn6/g4GD5+PhI0m19jSdNmqSGDRsqOjpazz//vCpUqKDk5GRt3LhR//nPf7Rz584C3R5uMRfdPYS7yJ9vM75St27djKTr3mbs6elpgoODTefOnc2BAwcc/aKjo02ZMmWuuf0mTZqY4OBgc/nyZWPMjd1m3LZtW+Pj42PS0tKu2qd79+6mcOHCjttzs7OzTURExDW/ByIjI8OMHDnSVK1a1Xh7e5t77rnH1KxZ0wwZMsSkpKQ4+kkyffr0yXMd//73v02lSpWMt7e3qVKlipk5c6YZNGiQufK/a1pamunTp48JDAw0JUqUMO3btzd79+41knJ9k2dycrLp06ePiYiIMIULFzahoaGmefPmZvr06dd8nv7sat8ku3z5ctOgQQNTtGhR4+fnZ9q2bWt++eWXXMsPGzbMlCpVynh6ejrdcvzNN9+YBx54wPj4+Jhy5cqZkSNHmg8//DDXbcl/5XtQ8rJt2zYTFxdnSpQoYYoVK2aaNm3qdHurMVe/zfjK8WzMf8d62bJlneZ9/fXXJioqynh5eTluOT506JB57rnnzH333Wd8fHxMYGCgadq0qVm+fPl1a87Z9tatW01MTIzx8fExZcuWzfV9IsYUzFi8li+//NK0bt3aBAUFGS8vLxMQEGAaNmxoRo8ebc6dO+fU90Zf46u9dnnVePjwYSPJjB492mn+wYMHzbPPPmtCQ0NN4cKFTalSpcwjjzxiPv/883zvI1zLw5gbvKoLgPV27NihGjVq6OOPP1aXLl1cXQ4KWJMmTXT69Ok8T9cBdxuuQQHuUFd+V4wkTZgwQZ6enmrUqJELKgKAgsM1KMAdatSoUUpISFDTpk3l5eWl7777Tt9995169epVIHehAIArEVCAO1T9+vW1bNkyDRs2TBcuXFCZMmU0ePDgXLc/A8CdiGtQAACAdbgGBQAAWIeAAgAArHNHXoOSnZ2txMRE+fr6FujXOAMAgFvHGKPz588rPDz8uj+VcEcGlMTERO5SAADgDnXs2LHr/jDmHRlQcn7y+9ixYwXymxkAAODWS01NVUREhOPv+LXckQEl57SOn58fAQUAgDvMjVyewUWyAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOt4uboAAIB7K/fmt64u4a5xZEQbV5dQYDiCAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFgnXwFl+PDhql27tnx9fRUcHKz27dtr7969Tn0uXbqkPn366N5771WJEiXUoUMHJScnO/U5evSo2rRpo2LFiik4OFivvfaaMjMz//reAACAu0K+AsqaNWvUp08fbdq0ScuWLdPly5fVokULpaWlOfq8+uqrWrhwoebPn681a9YoMTFRjz/+uKM9KytLbdq0UUZGhjZs2KCPPvpIs2bN0rvvvltwewUAAO5oHsYYc7MLnzp1SsHBwVqzZo0aNWqklJQUBQUFae7cuXriiSckSXv27FFkZKQ2btyoevXq6bvvvtMjjzyixMREhYSESJKmTp2qN954Q6dOnVKRIkWuu93U1FT5+/srJSVFfn5+N1s+AMAC5d781tUl3DWOjGjj6hKuKT9/v//SNSgpKSmSpMDAQElSQkKCLl++rNjYWEefKlWqqEyZMtq4caMkaePGjYqOjnaEE0mKi4tTamqqdu/ened20tPTlZqa6jQBAIC7100HlOzsbL3yyitq0KCBqlWrJklKSkpSkSJFFBAQ4NQ3JCRESUlJjj5/Dic57TlteRk+fLj8/f0dU0RExM2WDQAA7gA3HVD69OmjXbt2ad68eQVZT54GDBiglJQUx3Ts2LFbvk0AAOA6XjezUN++fbVo0SKtXbtWpUuXdswPDQ1VRkaGzp0753QUJTk5WaGhoY4+W7ZscVpfzl0+OX2u5O3tLW9v75spFcAVON9fMGw/1w/c6fJ1BMUYo759++rLL7/UypUrVb58eaf2mjVrqnDhwlqxYoVj3t69e3X06FHFxMRIkmJiYvTzzz/r5MmTjj7Lli2Tn5+foqKi/sq+AACAu0S+jqD06dNHc+fO1ddffy1fX1/HNSP+/v4qWrSo/P391bNnT/Xr10+BgYHy8/PTyy+/rJiYGNWrV0+S1KJFC0VFRalr164aNWqUkpKSNHDgQPXp04ejJAAAQFI+A8qUKVMkSU2aNHGaP3PmTHXv3l2SNH78eHl6eqpDhw5KT09XXFycJk+e7OhbqFAhLVq0SC+99JJiYmJUvHhxdevWTUOHDv1rewIAAO4a+QooN/KVKT4+Ppo0aZImTZp01T5ly5bV4sWL87NpAADgRvgtHgAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwTr6+6h75w8/aFxx+2h4A3AtHUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1sl3QFm7dq3atm2r8PBweXh46KuvvnJq7969uzw8PJymli1bOvU5e/asunTpIj8/PwUEBKhnz566cOHCX9oRAABw98h3QElLS1P16tU1adKkq/Zp2bKlTpw44Zg++eQTp/YuXbpo9+7dWrZsmRYtWqS1a9eqV69e+a8eAADclbzyu0CrVq3UqlWra/bx9vZWaGhonm2//vqrlixZoh9//FG1atWSJE2cOFGtW7fWmDFjFB4ent+SAADAXeaWXIOyevVqBQcH6/7779dLL72kM2fOONo2btyogIAARziRpNjYWHl6emrz5s15ri89PV2pqalOEwAAuHsVeEBp2bKlZs+erRUrVmjkyJFas2aNWrVqpaysLElSUlKSgoODnZbx8vJSYGCgkpKS8lzn8OHD5e/v75giIiIKumwAAGCRfJ/iuZ5OnTo5/h0dHa0HHnhA9913n1avXq3mzZvf1DoHDBigfv36OR6npqYSUgAAuIvd8tuMK1SooJIlS+rAgQOSpNDQUJ08edKpT2Zmps6ePXvV61a8vb3l5+fnNAEAgLvXLQ8o//nPf3TmzBmFhYVJkmJiYnTu3DklJCQ4+qxcuVLZ2dmqW7furS4HAADcAfJ9iufChQuOoyGSdPjwYe3YsUOBgYEKDAzUkCFD1KFDB4WGhurgwYN6/fXXVbFiRcXFxUmSIiMj1bJlSz3//POaOnWqLl++rL59+6pTp07cwQMAACTdxBGUrVu3qkaNGqpRo4YkqV+/fqpRo4beffddFSpUSD/99JPatWunypUrq2fPnqpZs6bWrVsnb29vxzri4+NVpUoVNW/eXK1bt1bDhg01ffr0gtsrAABwR8v3EZQmTZrIGHPV9qVLl153HYGBgZo7d25+Nw0AANwEv8UDAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArJPvgLJ27Vq1bdtW4eHh8vDw0FdffeXUbozRu+++q7CwMBUtWlSxsbHav3+/U5+zZ8+qS5cu8vPzU0BAgHr27KkLFy78pR0BAAB3j3wHlLS0NFWvXl2TJk3Ks33UqFF6//33NXXqVG3evFnFixdXXFycLl265OjTpUsX7d69W8uWLdOiRYu0du1a9erV6+b3AgAA3FW88rtAq1at1KpVqzzbjDGaMGGCBg4cqEcffVSSNHv2bIWEhOirr75Sp06d9Ouvv2rJkiX68ccfVatWLUnSxIkT1bp1a40ZM0bh4eF/YXcAAMDdoECvQTl8+LCSkpIUGxvrmOfv76+6detq48aNkqSNGzcqICDAEU4kKTY2Vp6entq8eXOe601PT1dqaqrTBAAA7l4FGlCSkpIkSSEhIU7zQ0JCHG1JSUkKDg52avfy8lJgYKCjz5WGDx8uf39/xxQREVGQZQMAAMvcEXfxDBgwQCkpKY7p2LFjri4JAADcQgUaUEJDQyVJycnJTvOTk5MdbaGhoTp58qRTe2Zmps6ePevocyVvb2/5+fk5TQAA4O5VoAGlfPnyCg0N1YoVKxzzUlNTtXnzZsXExEiSYmJidO7cOSUkJDj6rFy5UtnZ2apbt25BlgMAAO5Q+b6L58KFCzpw4IDj8eHDh7Vjxw4FBgaqTJkyeuWVV/Tee++pUqVKKl++vN555x2Fh4erffv2kqTIyEi1bNlSzz//vKZOnarLly+rb9++6tSpE3fwAAAASTcRULZu3aqmTZs6Hvfr10+S1K1bN82aNUuvv/660tLS1KtXL507d04NGzbUkiVL5OPj41gmPj5effv2VfPmzeXp6akOHTro/fffL4DdAQAAd4N8B5QmTZrIGHPVdg8PDw0dOlRDhw69ap/AwEDNnTs3v5sGAABu4o64iwcAALgXAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwToEHlMGDB8vDw8NpqlKliqP90qVL6tOnj+69916VKFFCHTp0UHJyckGXAQAA7mC35AhK1apVdeLECcf0ww8/ONpeffVVLVy4UPPnz9eaNWuUmJioxx9//FaUAQAA7lBet2SlXl4KDQ3NNT8lJUX//ve/NXfuXDVr1kySNHPmTEVGRmrTpk2qV6/erSgHAADcYW7JEZT9+/crPDxcFSpUUJcuXXT06FFJUkJCgi5fvqzY2FhH3ypVqqhMmTLauHHjVdeXnp6u1NRUpwkAANy9Cjyg1K1bV7NmzdKSJUs0ZcoUHT58WA8//LDOnz+vpKQkFSlSRAEBAU7LhISEKCkp6arrHD58uPz9/R1TREREQZcNAAAsUuCneFq1auX49wMPPKC6deuqbNmy+uyzz1S0aNGbWueAAQPUr18/x+PU1FRCCgAAd7FbfptxQECAKleurAMHDig0NFQZGRk6d+6cU5/k5OQ8r1nJ4e3tLT8/P6cJAADcvW55QLlw4YIOHjyosLAw1axZU4ULF9aKFSsc7Xv37tXRo0cVExNzq0sBAAB3iAI/xdO/f3+1bdtWZcuWVWJiogYNGqRChQqpc+fO8vf3V8+ePdWvXz8FBgbKz89PL7/8smJiYriDBwAAOBR4QPnPf/6jzp0768yZMwoKClLDhg21adMmBQUFSZLGjx8vT09PdejQQenp6YqLi9PkyZMLugwAAHAHK/CAMm/evGu2+/j4aNKkSZo0aVJBbxoAANwl+C0eAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoAAAAOsQUAAAgHUIKAAAwDoEFAAAYB2XBpRJkyapXLly8vHxUd26dbVlyxZXlgMAACzhsoDy6aefql+/fho0aJC2bdum6tWrKy4uTidPnnRVSQAAwBIuCyjjxo3T888/rx49eigqKkpTp05VsWLF9OGHH7qqJAAAYAmXBJSMjAwlJCQoNjb2/wrx9FRsbKw2btzoipIAAIBFvFyx0dOnTysrK0shISFO80NCQrRnz55c/dPT05Wenu54nJKSIklKTU29tYX+Rdnpf7i6hLuG7a/1nYRxWTAYkwWHMVlwbB+XOfUZY67b1yUBJb+GDx+uIUOG5JofERHhgmrgCv4TXF0B4IwxCRvdKePy/Pnz8vf3v2YflwSUkiVLqlChQkpOTnaan5ycrNDQ0Fz9BwwYoH79+jkeZ2dn6+zZs7r33nvl4eFxy+u9m6WmpioiIkLHjh2Tn5+fq8sBGJOwDmOy4BhjdP78eYWHh1+3r0sCSpEiRVSzZk2tWLFC7du3l/Tf0LFixQr17ds3V39vb295e3s7zQsICLgNlboPPz8//uPBKoxJ2IYxWTCud+Qkh8tO8fTr10/dunVTrVq1VKdOHU2YMEFpaWnq0aOHq0oCAACWcFlAeeqpp3Tq1Cm9++67SkpK0oMPPqglS5bkunAWAAC4H5deJNu3b988T+ng9vH29tagQYNynUIDXIUxCdswJl3Dw9zIvT4AAAC3ET8WCAAArENAAQAA1iGgAAAA6xBQAACAdQgoAADAOgQUANYxxigrK8vVZQBwIQKKm5kxY4a6deummTNnSpI+/fRTRUZGqkKFCho0aJCLq4O7yczM1MCBA9W4cWPH+Bs9erRKlCihYsWKqVu3bsrIyHBxlXA3vE/a4Y74NWMUjAkTJmjgwIGKi4vT22+/rcTERI0fP16vvvqqsrKyNHbsWJUqVUq9evVydalwE0OGDNGMGTPUpUsXff755zp58qS+/fZbTZ8+XVlZWXrrrbc0YcIEvf76664uFW6C90mLGLiNKlWqmPj4eGOMMdu2bTNeXl5mxowZjvYZM2aYmjVruqo8uKEKFSqYhQsXGmOM2b9/v/H09DTz5s1ztH/66aemWrVqrioPboj3SXtwiseN/Pbbb2rYsKEkqUaNGipUqJDq1avnaG/cuLEOHjzoqvLghhITE1W9enVJUsWKFVWkSBHHY0mqXbu2fvvtN1eVBzfE+6Q9CChupFixYkpLS3M8DgoKUokSJZz6ZGZm3u6y4Mb8/f117tw5x+OHHnpIvr6+jsfp6eny8PBwQWVwV7xP2oOA4kaqVKmin376yfH42LFjKlu2rOPxnj17VK5cORdUBncVFRWlbdu2OR6vX79epUqVcjz++eefValSJVeUBjfF+6Q9uEjWjYwcOVLFixe/avvRo0f1wgsv3MaK4O6mTp2qwoULX7X98uXLXCCL24r3SXvwa8YAAMA6HEFxQ5mZmdq9e7eSkpIkSaGhoYqKirrmJ1nAFTIzM5WYmKgyZcq4uhQAtxnXoLiR7OxsDRw4UEFBQapRo4ZatWqlVq1aqUaNGgoODtY777yj7OxsV5cJOOzevVvly5d3dRlwM5MnT1ZsbKw6duyoFStWOLWdPn1aFSpUcFFl7oWA4kbefPNNTZ8+XSNGjNChQ4eUlpamtLQ0HTp0SCNHjtT06dM1YMAAV5cJAC7z/vvv67XXXlOVKlXk7e2t1q1ba/jw4Y72rKwsbn2/TbgGxY2Ehobqo48+UlxcXJ7tS5cu1bPPPqvk5OTbXBnc1UMPPXTN9osXL2rfvn38Lg9um6pVq+rtt9/W008/LUnasGGD2rdvrxdffFFDhw5VcnKywsPDGZO3AdeguJHz588rPDz8qu1hYWFO9/8Dt9ovv/yiTp06XfU0zokTJ7Rv377bXBXc2eHDh1W/fn3H4/r162vlypWKjY3V5cuX9corr7iuODdDQHEjTZo0Uf/+/RUfH6+SJUs6tZ0+fVpvvPGGmjRp4pri4JaqVaumunXr6qWXXsqzfceOHfrXv/51m6uCOytZsqSOHTvm9F0n1apV08qVK9WsWTMlJia6rjg3Q0BxI1OnTlXr1q0VFham6OhohYSESJKSk5P1888/KyoqSosWLXJxlXAnDRo00N69e6/a7uvrq0aNGt3GiuDuGjZsqAULFujhhx92mh8VFaUVK1aoadOmLqrM/XANipvJzs7W0qVLtWnTJqfbjGNiYtSiRQt5enLdNAD39dNPPykhIUE9evTIs33Xrl364osvNGjQoNtcmfshoAAAAOtwiscNbdmyRRs3bnQ6glK/fn3Vrl3bxZXBXeU1JmNiYlSnTh0XVwZ3xZh0PY6guJGTJ0+qQ4cOWr9+vcqUKeN0DcrRo0fVoEEDffHFFwoODnZxpXAXjEnY5uTJk3r88ce1YcMGxqSLccGBG+ndu7eysrL066+/6siRI9q8ebM2b96sI0eO6Ndff1V2drb69Onj6jLhRhiTsE3v3r2VnZ3NmLQAR1DciK+vr9auXasaNWrk2Z6QkKAmTZro/Pnzt7kyuCvGJGzDmLQHR1DciLe3t1JTU6/afv78eXl7e9/GiuDuGJOwDWPSHgQUN/LUU0+pW7du+vLLL53+A6ampurLL79Ujx491LlzZxdWCHfDmIRtGJP24C4eNzJu3DhlZ2erU6dOyszMVJEiRSRJGRkZ8vLyUs+ePTVmzBgXVwl3wpiEbRiT9uAaFDeUmpqqhIQEp9vnatasKT8/PxdXBnfFmIRtGJOuR0ABAADW4RoUN3Px4kX98MMP+uWXX3K1Xbp0SbNnz3ZBVXBnjEnYhjFpB46guJF9+/apRYsWOnr0qDw8PNSwYUN98sknCg8Pl/TfLyIKDw9XVlaWiyuFu2BMwjaMSXtwBMWNvPHGG6pWrZpOnjypvXv3ytfXVw0bNtTRo0ddXRrcFGMStmFM2oMjKG4kJCREy5cvV3R0tCTJGKPevXtr8eLFWrVqlYoXL84nA9xWjEnYhjFpD46guJGLFy/Ky+v/7iz38PDQlClT1LZtWzVu3Fj79u1zYXVwR4xJ2IYxaQ++B8WNVKlSRVu3blVkZKTT/A8++ECS1K5dO1eUBTfGmIRtGJP24AiKG3nsscf0ySef5Nn2wQcfqHPnzuKMH24nxiRsw5i0B9egAAAA63AEBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAACAdQgoAHCDMjIyXF0C4DYIKICbO3/+vLp06aLixYsrLCxM48ePV5MmTfTKK69IkubMmaNatWrJ19dXoaGhevrpp3Xy5EnH8qtXr5aHh4eWLl2qGjVqqGjRomrWrJlOnjyp7777TpGRkfLz89PTTz+tP/74w7Fcdna2hg8frvLly6to0aKqXr26Pv/88+vWa4xRxYoVNWbMGKf5O3bskIeHhw4cOCBJOnfunP7+978rKChIfn5+atasmXbu3Onof/DgQT366KMKCQlRiRIlVLt2bS1fvtxpneXKldOwYcP07LPPys/PT7169cr38wvg5hBQADfXr18/rV+/Xt98842WLVumdevWadu2bY72y5cva9iwYdq5c6e++uorHTlyRN27d8+1nsGDB+uDDz7Qhg0bdOzYMXXs2FETJkzQ3Llz9e233+r777/XxIkTHf2HDx+u2bNna+rUqdq9e7deffVVPfPMM1qzZs016/Xw8NBzzz2nmTNnOs2fOXOmGjVqpIoVK0qSnnzySUdISkhI0EMPPaTmzZvr7NmzkqQLFy6odevWWrFihbZv366WLVuqbdu2uX4UbsyYMapevbq2b9+ud955J1/PLYC/wABwW6mpqaZw4cJm/vz5jnnnzp0zxYoVM//85z/zXObHH380ksz58+eNMcasWrXKSDLLly939Bk+fLiRZA4ePOiY98ILL5i4uDhjjDGXLl0yxYoVMxs2bHBad8+ePU3nzp2vW/fx48dNoUKFzObNm40xxmRkZJiSJUuaWbNmGWOMWbdunfHz8zOXLl1yWu6+++4z06ZNu+p6q1ataiZOnOh4XLZsWdO+ffvr1gOg4PFbPIAbO3TokC5fvqw6deo45vn7++v+++93PE5ISNDgwYO1c+dO/f7778rOzpYkHT16VFFRUY5+DzzwgOPfISEhKlasmCpUqOA0b8uWLZKkAwcO6I8//tDf/vY3p3oyMjJUo0aN69YdHh6uNm3a6MMPP1SdOnW0cOFCpaen68knn5Qk7dy5UxcuXNC9997rtNzFixd18OBBSf89gjJ48GB9++23OnHihDIzM3Xx4sVcR1Bq1ap13XoAFDwCCoCrSktLU1xcnOLi4hQfH6+goCAdPXpUcXFxuS4YLVy4sOPfHh4eTo9z5uWEmwsXLkiSvv32W5UqVcqpn7e39w3V9ve//11du3bV+PHjNXPmTD311FMqVqyYY/1hYWFavXp1ruUCAgIkSf3799eyZcs0ZswYVaxYUUWLFtUTTzyRa7+KFy9+Q/UAKFgEFMCNVahQQYULF9aPP/6oMmXKSJJSUlK0b98+NWrUSHv27NGZM2c0YsQIRURESJK2bt36l7cbFRUlb29vHT16VI0bN76pdbRu3VrFixfXlClTtGTJEq1du9bR9tBDDykpKUleXl4qV65cnsuvX79e3bt312OPPSbpv6HmyJEjN1ULgIJHQAHcmK+vr7p166bXXntNgYGBCg4O1qBBg+Tp6SkPDw+VKVNGRYoU0cSJE/Xiiy9q165dGjZsWIFst3///nr11VeVnZ2thg0bKiUlRevXr5efn5+6det23XUUKlRI3bt314ABA1SpUiXFxMQ42mJjYxUTE6P27dtr1KhRqly5shITE/Xtt9/qscceU61atVSpUiUtWLBAbdu2lYeHh9555x3HER4ArsddPICbGzdunGJiYvTII48oNjZWDRo0UGRkpHx8fBQUFKRZs2Zp/vz5ioqK0ogRI3Ld3nuzhg0bpnfeeUfDhw9XZGSkWrZsqW+//Vbly5e/4XX07NlTGRkZ6tGjh9N8Dw8PLV68WI0aNVKPHj1UuXJlderUSb/99ptCQkIc+33PPfeofv36atu2reLi4vTQQw8VyL4B+Os8jDHG1UUAsEdaWppKlSqlsWPHqmfPnq4u55rWrVun5s2b69ixY47gAeDuwCkewM1t375de/bsUZ06dZSSkqKhQ4dKkh599FEXV3Z16enpOnXqlAYPHqwnn3yScALchTjFA8DxZWSxsbFKS0vTunXrVLJkSZfV8+KLL6pEiRJ5Ti+++KI++eQTlS1bVufOndOoUaNcVieAW4dTPACsc/LkSaWmpubZ5ufnp+Dg4NtcEYDbjYACAACswykeAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6/x9Yi+GfgUyZdAAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df1 = df_games[df_games['game_year'].isin([2003, 2013, 2023])]\n",
    "df1.groupby('game_year')['total_score'].mean().plot(kind='bar', title='NBA: Average Total Points per Game')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4f1f6c9",
   "metadata": {
    "papermill": {
     "duration": 0.023996,
     "end_time": "2024-03-17T07:26:22.988084",
     "exception": false,
     "start_time": "2024-03-17T07:26:22.964088",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Finding 2. The same high level of score per game was in the 1960s-70s decade."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7454ab48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:23.038958Z",
     "iopub.status.busy": "2024-03-17T07:26:23.038500Z",
     "iopub.status.idle": "2024-03-17T07:26:23.385671Z",
     "shell.execute_reply": "2024-03-17T07:26:23.384496Z"
    },
    "papermill": {
     "duration": 0.376715,
     "end_time": "2024-03-17T07:26:23.389277",
     "exception": false,
     "start_time": "2024-03-17T07:26:23.012562",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'NBA: Average Total Points per Game'}, xlabel='game_year'>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_years.plot(title='NBA: Average Total Points per Game')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "935e5bec",
   "metadata": {
    "papermill": {
     "duration": 0.026506,
     "end_time": "2024-03-17T07:26:23.442218",
     "exception": false,
     "start_time": "2024-03-17T07:26:23.415712",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Finding 3. Since ~1995, more 3-point shots every decade but with same percentage ~35%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2dfc9d1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-17T07:26:23.496964Z",
     "iopub.status.busy": "2024-03-17T07:26:23.496464Z",
     "iopub.status.idle": "2024-03-17T07:26:23.519085Z",
     "shell.execute_reply": "2024-03-17T07:26:23.517945Z"
    },
    "papermill": {
     "duration": 0.053436,
     "end_time": "2024-03-17T07:26:23.521988",
     "exception": false,
     "start_time": "2024-03-17T07:26:23.468552",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>made</th>\n",
       "      <th>attempts</th>\n",
       "      <th>percentage</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>game_year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>6.3</td>\n",
       "      <td>18.8</td>\n",
       "      <td>0.330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>10.4</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>15.1</td>\n",
       "      <td>42.4</td>\n",
       "      <td>0.355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023</th>\n",
       "      <td>24.7</td>\n",
       "      <td>68.3</td>\n",
       "      <td>0.362</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           made  attempts  percentage\n",
       "game_year                            \n",
       "1993        6.3      18.8       0.330\n",
       "2003       10.4      30.0       0.345\n",
       "2013       15.1      42.4       0.355\n",
       "2023       24.7      68.3       0.362"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3 = df_games[df_games['game_year'].isin([1993, 2003, 2013, 2023])]\n",
    "df3_made = df3.groupby('game_year')['fg3_made'].mean().round(1)\n",
    "df3_attempts = df3.groupby('game_year')['fg3_attempts'].mean().round(1)\n",
    "df3_percentage = df3.groupby('game_year')['fg3_pct'].mean().round(3)\n",
    "\n",
    "df3_total = pd.DataFrame({\n",
    "    'made': df3_made,\n",
    "    'attempts': df3_attempts,\n",
    "    'percentage': df3_percentage\n",
    "})\n",
    "df3_total"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1218020,
     "sourceId": 6090760,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30664,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.679326,
   "end_time": "2024-03-17T07:26:24.171553",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-03-17T07:26:12.492227",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
